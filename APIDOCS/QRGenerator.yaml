openapi: 3.0.1
info:
  title: Marka - QR Generator Service
  description: Api documentation of QR Generator Service
  version: 1.0.0
externalDocs:
  description: Find out more about Marka
  url: https://marka.club/docs
servers:
  - url: https://localhost:8080
tags:
  - name: Auth
  - name: User
paths:
  /user:
    post:
      tags:
        - User
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: Successful Operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/UnauthorizedError'
      x-codegen-request-body-name: body
  /login:
    get:
      tags:
        - Auth
      summary: Logs user into the system
      operationId: login
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful Operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid username/password supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /logout:
    get:
      tags:
        - Auth
      summary: Logs out current logged in user session
      operationId: logout
      responses:
        default:
          description: Successful Operation
          content: {}
  /user/{email}:
    get:
      security:
        - BearerAuth: []
      tags:
        - User
      summary: Get user by user email
      operationId: getUserByEmail
      parameters:
        - name: email
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        password:
          type: string
          writeOnly: true
        phone:
          type: string
        type:
          type: string
          enum: [CUSTOMER, STORE]
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Not found!
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
