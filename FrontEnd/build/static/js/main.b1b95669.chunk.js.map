{"version":3,"sources":["assets/img/avatar.svg","serviceWorker.js","components/ImageViewer.js","components/Avatar.js","components/Footer.js","components/Loader.js","components/SystemMessages.js","components/Navbar.js","components/ScrollToTop.js","components/Pagination.js","components/ToggleButton.js","layouts.js","pages/Auth/SignUp/SignUp.js","pages/Auth/SignIn/SignIn.js","pages/Auth/SignOut/SignOut.js","pages/Auth/Reset/Reset.js","pages/Auth/NewPassword/NewPassword.js","pages/Welcome/Welcome.js","pages/Features/Features.js","pages/Dashboard/AsCompany.js","pages/Dashboard/AsCustomer.js","pages/Dashboard/Dashboard.js","pages/Codes/Codes.js","pages/Profile/Profile.js","pages/Profile/Me.js","pages/Settings/Account.js","pages/Settings/Settings.js","pages/Users/List.js","pages/Users/Edit.js","pages/Users/Users.js","pages/NoMatch/NoMatch.js","pages/StaticPages/TermsOfService.js","pages/StaticPages/PrivacyPolicy.js","routes.js","App.js","stores/UIStore.js","models/SystemMessage.js","models/Account.js","models/Code.js","stores/SystemMessageStore.js","helpers/request.js","services/AccountServices.js","services/UserServices.js","services/CodeServices.js","services/QRServices.js","index.js","stores/AccountStore.js","models/User.js","stores/UserStore.js","stores/CodeStore.js","stores/QRStore.js","stores/index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ImageViewer","props","useState","src","setSrc","placeholder","undefined","width","height","isACorrectSrc","useEffect","alt","version","id","xmlns","x","y","viewBox","x1","y1","x2","y2","offset","stopColor","stopOpacity","attributeName","values","keyTimes","dur","repeatCount","fill","stroke","strokeOpacity","strokeWidth","Avatar","checkSrc","avatar","Footer","className","packageJSON","href","rel","target","key","to","Loader","SystemMessages","inject","observer","messages","SystemMessageStore","news","map","message","status","code","type","data-dismiss","aria-label","onClick","hide","aria-hidden","hideTimeout","Navbar","this","isShrink","Shrink","me","uid","addEventListener","packageJson","authenticated","Fragment","isManager","isAdmin","smooth","dropDownToggle","data-toggle","name","icon","first","renderLogo","data-target","aria-controls","aria-expanded","renderLinks","renderUserMenu","AccountStore","indexOf","e","dd","currentTarget","classList","toggle","querySelector","shrink","navbar","document","getElementById","pageYOffset","add","remove","Component","computed","ScrollToTop","React","prevProps","pathname","scrollTo","withRouter","ToggleButton","preventDefault","setState","loading","toggleFunction","textActive","textPassive","classActive","classPassive","iconActive","iconPassive","iconLoading","text","style","ref","forwardref","LayoutWelcome","data-spy","data-offset","children","LayoutGuest","LayoutDefault","SignUp","schema","Yup","shape","email","required","password","min","matches","last","useForm","validationSchema","handleSubmit","errors","watch","role","freeRate","history","useHistory","isSubmitting","setIsSubmitting","onSubmit","data","a","create","push","localStorage","getItem","value","defaultChecked","htmlFor","company","max","defaultValue","step","disabled","FormikForm","touched","EnhancedForm","setFieldError","setSubmitting","setStatus","signIn","component","enableReinitialize","initialValues","SignOut","signOut","PureComponent","withFormik","mapPropsToValues","resetForm","token","params","Welcome","innerHeight","Features","Company","CodeStore","read","meta","list","length","QRStore","origin","filter","i","isUsed","QR","handleGenerate","handleClick","owner","quantity","minHeight","total","available","gifted","gift","scope","k","createdAt","updatedAt","maxWidth","user","renderHello","dangerouslySetInnerHTML","__html","Customer","setCode","freebies","used","Dashboard","Codes","useParams","use","info","requiredMore","isGotFreebie","Profile","autorun","UserStore","getUserByUsername","username","cover","bio","handleFileChange","image","files","avatarModal","offsetWidth","toggleAvatarModal","setEditorRef","editor","handleScaleChange","scale","uploadAvatar","canvas","getImageScaledToCanvas","toDataURL","fetch","res","blob","uploadCover","dataURL","createElement","ctx","getContext","img","Image","onload","drawImage","progress","cancelCover","selectedFile","isUploadingCover","isUploadingProfile","fullname","border","onChange","Modal","isOpen","ModalBody","ModalFooter","Button","color","JSON","stringify","process","stopPropagation","dataset","input","click","setFieldValue","born","selected","Date","dateFormat","date","routes","path","link","exact","title","main","update","Settings","route","index","List","handleFilter","query","toLowerCase","filteredItems","items","item","surname","handleSearch","History","renderItems","isEditor","URLSearchParams","search","get","page","count","limit","range","system","Input","onKeyUp","success","getUserById","updateUser","toggleAdmin","toggleEditor","toggleManager","toggleWorker","toggleStatus","isWorker","Edit","Users","NoMatch","TermsOfService","PrivacyPolicy","RestrictedRoute","layout","Layout","rest","render","from","GuestRoute","Routes","handleAuth","UIStore","setWidth","Math","body","scrollWidth","innerWidth","setHeight","scrollHeight","hash","setItem","includes","backgroud","SignIn","Reset","NewPassword","Me","UserEdit","App","Stores","stores","loader","showMessage","navCollapsed","observable","action","languageId","r","intlProviderRef","navStyle","SystemMessage","isDisplayed","timeout","setTimeout","Account","Meta","Code","_id","shortener","substr","linkify","replace","model","_list","delete","doc","legacy","v","newRelease","timeless","toJS","set","array","url","port","API_URL","request","cookie","load","deleteCookies","setCookies","remember","expires","setTime","now","save","endpoint","Object","keys","encodeURI","join","method","headers","mode","response","json","result","Error","post","put","AccountServices","url_id","reset","newPassword","changePassword","activation","verify","newsletter","UserServices","detail","Services","bound","service","handleError","updateProfile","removeItem","_profile","profile","fetchSuccess","forEach","_me","parse","client_name","clear","User","client_id","urls","customClaims","admin","manager","worker","client_type_cd","client_url","address","city","zip_code","country","status_cd","timezone_id","timezone","timezone_text","regex","utcOffset","_born","Number","force","users","time","moment","getProfile","String","user_id","_detail","Store","Service","Model","sort","b","_item","URL","contentType","ready","unregister","reload","checkValidServiceWorker","caches","cacheNames","Promise","all","cacheName","setNewRelease","ReactDOM"],"mappings":"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","file":"static/js/main.b1b95669.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.2d30c8a1.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this models and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        console.log('Is not localhost. Just register service worker')\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {useEffect, useState} from 'react';\n\nexport const ImageViewer = (props) => {\n  const [src, setSrc] = useState(null);\n  const placeholder = props.placeholder === undefined ? `http://holder.ninja/${props.width || 100}x${props.height || 100}.svg` :\n    props.placeholder;\n  const isACorrectSrc = (src) => {\n    return !(!src || src === 'undefined' || src === 'undefined.png' || typeof src === 'object')\n  };\n\n  useEffect(() => {\n    if (isACorrectSrc(props.src)) {\n      // firebase.storage().ref('images')\n      //   .child(props.src).getDownloadURL()\n      //   .then(\n      //     url => {\n      //       const image = new Image();\n      //       image.onload = () => {\n      //         setSrc(url)\n      //       };\n      //       image.src = url;\n      //     }\n      //   );\n      setSrc(null);\n    }\n  },[props.src]);\n\n  return (\n    isACorrectSrc(props.src)\n      ? src\n      ? <img {...props} src={src} alt={props.alt || \"such a nice image without an alt text\"}/>\n      : (props.width || props.height)\n        ? <svg {...props} version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n               viewBox={`0 0 ${props.width} ${props.height}`}>\n          <defs>\n            <linearGradient id=\"flow\" x1=\"100%\" y1=\"100%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"#E1E3E4\" stopOpacity=\"1\">\n                <animate\n                  attributeName=\"stop-color\"\n                  values=\"#e1e3e4;#e1e3e4;#b1b3b4;#e1e3e4;#e1e3e4;\"\n                  keyTimes=\"0;.25;.5;.75;1\"\n                  dur=\"2s\"\n                  repeatCount=\"indefinite\"/>\n              </stop>\n            </linearGradient>\n          </defs>\n          <rect fill=\"url(#flow)\" stroke=\"#888\" strokeOpacity=\".5\" strokeWidth=\"1\" width={props.width}\n                height={props.height}/>\n        </svg> : null\n      : placeholder\n      ? <img {...props} src={placeholder} alt={props.alt || \"such a nice image without an alt text\"}/>\n      : null);\n\n};\n","import React from 'react';\nimport {ImageViewer} from './ImageViewer'\nimport avatar from \"../assets/img/avatar.svg\"\n\nexport const Avatar = (props) => {\n  const checkSrc = (src) => {\n    return (!src || src === 'undefined' || src === 'undefined.png' || typeof src === 'object')\n  };\n  const src = checkSrc(props.src) ? avatar : null;\n  return <ImageViewer {...props} placeholder={src}/>\n};\n\n","\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport packageJSON from '../../package.json';\n\nexport const Footer = () => {\n\n  return (\n    <footer id=\"footer\" className=\"small\">\n      <div className=\"container py-3 border-top\">\n        <div className=\"row\">\n          <div className=\"col-sm-4  text-center text-sm-left text-uppercase\">\n            marka.club &copy; 2020{' - '}\n            <span className=\"version\">v{packageJSON.version}</span>\n          </div>\n          <div className=\"col-sm-4 text-center\">\n            The project under the <a href=\"https://opensource.org/licenses/MIT\"\n                                     rel=\"noopener noreferrer\"\n                                     target=\"_blank\">MIT license</a>.\n          </div>\n          <div className=\"col-sm-4 text-center text-sm-right\">\n            <ul className=\"nav justify-content-center justify-content-sm-end\">\n              <li className=\"nav-item\" key=\"about\">\n                <Link className=\"nav-link py-0\" to=\"/about\">About</Link>\n              </li>\n              <li className=\"nav-item\" key=\"tos\">\n                <Link className=\"nav-link py-0\" to=\"/tos\">Terms of Service</Link>\n              </li>\n              <li className=\"nav-item\" key=\"privacy\">\n                <Link className=\"nav-link py-0\" to=\"/privacy\">Privacy Policy</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n","import React from 'react';\n\nexport const Loader = (props) => {\n  return <div className=\"loader\">\n    <div {...props} className=\"fa-3x\">\n      <i className=\"fas fa-circle-notch fa-spin\"/></div>\n  </div>;\n};\n","import {inject, observer} from \"mobx-react\";\nimport React from 'react';\n\nexport const SystemMessages = inject('SystemMessageStore')(observer((props) => {\n\n  const messages = props.SystemMessageStore.news;\n\n  return (\n    <div id=\"systemMessages\">{\n      messages.map((message, key) => {\n        const className = message.status >= 400\n          ? 'alert-danger' : message.status >= 300\n            ? 'alert-warning' : message.status >= 200\n              ? 'alert-success' : 'alert-info';\n        return <div key={key}\n                    className={\"system-messages col-sm-12 col-md-6 col-lg-5 mx-auto alert alert-dismissible show \"\n                    + className}>\n          <i className=\"fa fa-exclamation-triangle mr-2\"/>\n          <strong>{message.code}: </strong>\n          {/*<span dangerouslySetInnerHTML={{__html: message.message}}/>*/}\n          {message.message}\n          <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"\n                  onClick={() => {\n                    message.hide()\n                  }}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n          {message.hideTimeout()}\n        </div>\n      })}\n    </div>\n  );\n}));\n","import {inject, observer} from \"mobx-react\";\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {HashLink} from 'react-router-hash-link';\nimport {SystemMessages} from './SystemMessages';\nimport {computed} from \"mobx\";\nimport {ImageViewer} from './ImageViewer';\nimport packageJson from '../../package.json';\n\n\n@inject('AccountStore')\n@observer\nclass Navbar extends Component {\n\n  @computed get authenticated() {\n    return this.props.AccountStore.authenticated\n  }\n\n  @computed get me() {\n    return this.props.AccountStore.me\n  }\n\n  get isShrink() {\n    return this.props.className.indexOf('navbar-shrinked') > -1\n  }\n\n  static dropDownToggle(e) {\n    const dd = e.currentTarget;\n    dd.classList.toggle('show');\n    dd.querySelector('.dropdown-menu').classList.toggle('show');\n  }\n\n  static Shrink(e, shrink) {\n    const navbar = document.getElementById('navbar');\n    if (shrink || window.pageYOffset > 0) {\n      navbar.classList.add(\"navbar-shrink\");\n    } else {\n      navbar.classList.remove(\"navbar-shrink\");\n    }\n  }\n\n  componentDidMount() {\n    if (!this.isShrink) {\n      Navbar.Shrink(null, !!this.me.uid);\n      window.addEventListener('scroll', Navbar.Shrink);\n    }\n  }\n\n\n  renderLogo() {\n    return <Link to={this.me.uid ? \"/dashboard\" : \"/\"} className=\"navbar-brand\" key=\"logo\">\n      {/*<img id=\"logo\" src={logo} className=\"img-fluid\" alt=\"logo\"/>*/}\n      <span>MARKA.CLUB</span>\n      <span className=\"version\">v{packageJson.version}</span>\n    </Link>\n  }\n\n  renderLinks() {\n    const {authenticated, me} = this;\n    if (authenticated) {\n      return <React.Fragment>\n        {me.id &&\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/dashboard\">Dashboard</Link>\n        </li>}\n        {(me.isManager || me.isAdmin) &&\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/users\">Users</Link>\n        </li>}\n      </React.Fragment>\n    } else {\n      return [<li className=\"nav-item\" key=\"about\">\n        <HashLink smooth className=\"nav-link\" to=\"/#about\">About</HashLink>\n      </li>,\n        <li className=\"nav-item\" key=\"features\">\n          <Link className=\"nav-link\" to=\"/features\">Features</Link>\n        </li>];\n    }\n  }\n\n  renderUserMenu() {\n    const {authenticated, me} = this;\n    if (authenticated) {\n      return [\n        <li className=\"nav-item dropdown\" key=\"userMenu\" onClick={Navbar.dropDownToggle}>\n          <span className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">\n            <ImageViewer className=\"navbar-avatar\"\n                         src={me.avatar} alt={me.name}/>\n            <i className={me.icon}/> <strong>{me.first}</strong>\n          </span>\n          <div className=\"dropdown-menu\">\n            <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\n            <Link className=\"dropdown-item\" to=\"/profile\">Profile</Link>\n            <Link className=\"dropdown-item\" to=\"/settings\">Settings</Link>\n            <div className=\"dropdown-divider\"/>\n            <Link className=\"dropdown-item\" to=\"/signout\">Log out</Link>\n          </div>\n        </li>\n      ];\n    } else {\n      return [\n        <li className=\"nav-item\" key=\"signin\">\n          <Link className=\"nav-link\" to=\"/signin\">Sign In</Link>\n        </li>,\n        <li className=\"nav-item\" key=\"signup\">\n          <Link className=\"nav-link\" to=\"/signup\">Sign Up</Link>\n        </li>\n      ];\n    }\n  }\n\n  render() {\n    return (\n      <nav id=\"navbar\" className={\"navbar navbar-expand-lg fixed-top \" + this.props.className}>\n        <div className=\"container\">\n          {this.renderLogo()}\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarMain\"\n                  aria-controls=\"navbarMain\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"/>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarMain\">\n            <ul className=\"navbar-nav mr-auto\">\n              {this.renderLinks()}\n            </ul>\n\n            <ul className=\"nav navbar-nav navbar-right\">\n              {this.renderUserMenu()}\n            </ul>\n          </div>\n        </div>\n        <SystemMessages/>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar\n","import React from \"react\";\nimport {withRouter} from \"react-router-dom\";\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.location.pathname !== prevProps.location.pathname\n    ) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Pagination, PaginationItem} from 'reactstrap';\n\nexport class CustomPagination extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const totalPages = Math.ceil(props.count / props.limit);\n    const range = Math.min(totalPages, props.range);\n    const center = totalPages > range ? Math.ceil(range / 2) : range;\n    const start = (props.page > center ? (props.page >= totalPages - center ? totalPages - range : props.page - center) : 1);\n    const end = totalPages > range ? (start + range) : (start + range - 1);\n    this.state = {\n      range,\n      center,\n      start,\n      end,\n      page: props.page,\n      query: props.query,\n      totalPages\n    };\n  }\n\n  pageNumbers = () => {\n    let pages = [];\n    for (let i = this.state.start; i <= this.state.end; i++) {\n      const query = new URLSearchParams({...this.state.query, page: i});\n      const isActive = i === parseInt(this.state.page);\n      pages.push(<PaginationItem key={i} active={isActive}>\n        <Link className={\"page-link \" + (isActive && \"text-white\")} to={'?' + query.toString()}>{i}</Link>\n      </PaginationItem>)\n    }\n    return pages\n  };\n\n  componentDidUpdate = (props) => {\n    const totalPages = Math.ceil(props.count / props.limit);\n    const range = Math.min(totalPages, props.range);\n    const center = totalPages > range ? Math.ceil(range / 2) : range;\n    const start = (props.page > center ? (props.page >= totalPages - center ? totalPages - range : props.page - center) : 1);\n    const end = totalPages > range ? (start + range) : (start + range - 1);\n    this.setState({\n      range,\n      center,\n      start,\n      end,\n      page: props.page,\n      query: props.query,\n      totalPages\n    });\n  };\n\n  render() {\n    const className = this.state.status ? this.state.classActive : this.state.classPassive;\n    const first = '?' + (new URLSearchParams({...this.state.query, page: 1})).toString();\n    const previous = '?' + (new URLSearchParams({...this.state.query, page: parseInt(this.state.page) - 1})).toString();\n    const next = '?' + (new URLSearchParams({...this.state.query, page: parseInt(this.state.page) + 1})).toString();\n    const last = '?' + (new URLSearchParams({...this.state.query, page: this.state.totalPages})).toString();\n    return (\n      <Pagination style={{...this.props.style}}\n                  ref={this.props.forwardref ? this.props.forwardref : null}\n                  className={className + ' ' + this.props.className}>\n        <PaginationItem disabled={this.state.page <= this.state.start}>\n          <Link className=\"page-link\" to={first}>&laquo;</Link>\n        </PaginationItem>\n        <PaginationItem disabled={this.state.page <= this.state.start}>\n          <Link className=\"page-link\" to={previous}>&lsaquo;</Link>\n        </PaginationItem>\n        {\n          this.pageNumbers()\n        }\n        <PaginationItem disabled={this.state.page >= this.state.end}>\n          <Link className=\"page-link\" to={next}>&rsaquo;</Link>\n        </PaginationItem>\n        <PaginationItem disabled={this.state.page >= this.state.end}>\n          <Link className=\"page-link\" to={last}>&raquo;</Link>\n        </PaginationItem>\n      </Pagination>\n    );\n  }\n}\n\n","import React from 'react';\n\nexport class ToggleButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            textActive: props.textActive,\n            textPassive: props.textPassive,\n            classActive: props.classActive || 'btn btn-default text-primary',\n            classPassive: props.classPassive || 'btn btn-default',\n            iconActive: props.iconActive || 'fa fa-check',\n            iconPassive: props.iconPassive || 'fa fa-times',\n            iconLoading: props.iconLoading || 'fa fa-circle-notch fa-spin',\n            status: props.status,\n            loading: props.loading\n        }\n    }\n\n    onClick = (e) => {\n        e.preventDefault();\n        this.setState({\n            loading: true\n        });\n        this.props.toggleFunction()\n            // .then(response => {\n            //     console.log('toggleFunction', this.state.textActive);\n            //     // this.setState({\n            //     //     status: typeof response === 'boolean' ? response : this.state.status,\n            //     //     loading: false\n            //     // });\n            // })\n    };\n\n    // componentDidUpdate = (props) => {\n    //     this.setState({\n    //         status: props.status,\n    //         loading: false\n    //     });\n    // };\n\n    render() {\n        //console.log('status', this.state.status, this.props.toggleFunction);\n        const text = this.state.status ? this.state.textActive : this.state.textPassive;\n        const className = this.state.status ? this.state.classActive : this.state.classPassive;\n        const icon = this.state.loading ? this.state.iconLoading\n            : this.state.status ? this.state.iconActive : this.state.iconPassive;\n        return (\n            <button style={{...this.props.style}}\n                    ref={this.props.forwardref ? this.props.forwardref : null}\n                    className={className + ' ' + this.props.className} onClick={this.onClick}>\n                <i className={icon}/> {text}\n            </button>\n        );\n    }\n}\n\n","import React from 'react';\nimport {Footer, Navbar} from './components'\n\nimport './assets/App.scss';\n\nexport const LayoutWelcome = (props) =>\n  <React.Fragment>\n    <Navbar className=\"navbar-light\"/>\n    <div className=\"page\" data-spy=\"scroll\" data-target=\"#navbar\" data-offset=\"0\">\n      {props.children}\n    </div>\n    <Footer/>\n  </React.Fragment>;\n\nexport const LayoutGuest = (props) =>\n  <React.Fragment>\n    <Navbar className=\"navbar-shrinked navbar-light\"/>\n    <div className=\"page\" data-spy=\"scroll\" data-target=\"#navbar\" data-offset=\"0\">\n      {props.children}\n    </div>\n    <Footer/>\n  </React.Fragment>;\n\nexport const LayoutDefault = (props) =>\n  <React.Fragment>\n    <Navbar className=\"navbar-shrinked navbar-light\"/>\n    <div className=\"page\" data-spy=\"scroll\" data-target=\"#navbar\" data-offset=\"0\">\n      {props.children}\n    </div>\n    <Footer/>\n  </React.Fragment>;\n\n","import {inject, observer} from 'mobx-react';\nimport React, {useState} from 'react';\nimport {useHistory} from 'react-router';\nimport {useForm} from 'react-hook-form';\nimport {Link} from 'react-router-dom';\nimport * as Yup from 'yup';\n\nexport const SignUp = inject('AccountStore')(observer((props) => {\n\n  const schema = Yup.object().shape({\n    email: Yup.string().email('Please write a correct email address').required('Email is required'),\n    password: Yup.string().min(8, 'Password must be 8 characters or longer')\n      .matches(/[a-z]/, 'Password must contain at least one lowercase char')\n      .matches(/[A-Z]/, 'Password must contain at least one uppercase char')\n      .matches(/[a-zA-Z]+[^a-zA-Z\\s]+/, 'at least 1 number or special char (@,!,#, etc).'),\n    // username: Yup.string().matches(/^[A-Za-z0-9]+(?:[._-][A-Za-z0-9]+)*$/, 'Username only contain english characters and (_,-,.). Also usernames must start and end with a letter or number.')\n    //   .required('Username is required'),\n    last: Yup.string().required('Surname is required'),\n    first: Yup.string().required('Name is required'),\n  })\n\n\n  const {register, handleSubmit, errors, watch} = useForm({\n    validationSchema: schema\n  });\n  const role = watch(\"role\");\n  const freeRate = watch(\"freeRate\");\n  const history = useHistory();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const onSubmit = async data => {\n    setIsSubmitting(true);\n    if (await props.AccountStore.create(data)) {\n      history.push('/signin');\n    } else setIsSubmitting(false);\n  }\n\n  const {authenticated} = props.AccountStore;\n  if (authenticated) {\n    const location = localStorage.getItem('location');\n    props.history.push(location || '/dashboard');\n  }\n  return (\n    <div className=\"row justify-content-md-center\">\n      <section className=\"cover  bg-light\">\n        <div className=\"container\">\n          <div className=\"row h-100 justify-content-md-center\">\n            <div className=\"col-sm-4 my-auto\">\n              <form className=\"card border-0 p-4 shadow\" onSubmit={handleSubmit(onSubmit)}>\n                <h1 className=\"h4 lined\"><span>SIGN UP</span></h1>\n                <fieldset className=\"form-group\">\n                  <label className=\"small\">Email</label>\n                  <input className=\"form-control\" type=\"text\" name=\"email\" placeholder=\"email@email.com\"\n                         ref={register()}/>\n                  {errors.email &&\n                  <small className=\"form-text text-danger\">{errors.email.message}</small>}\n                </fieldset>\n                <div className=\"row\">\n                  <fieldset className=\"col-md-6 form-group\">\n                    <label className=\"small\">Name</label>\n                    <input className=\"form-control\" type=\"text\" name=\"first\" placeholder=\"Name\" ref={register()}/>\n                    {errors.first &&\n                    <small className=\"form-text text-danger\">{errors.first.message}</small>}\n                  </fieldset>\n                  <fieldset className=\"col-md-6 form-group\">\n                    <label className=\"small\">Surname</label>\n                    <input className=\"form-control\" type=\"text\" name=\"last\" placeholder=\"Surname\" ref={register()}/>\n                    {errors.last &&\n                    <small className=\"form-text text-danger\">{errors.last.message}</small>}\n                  </fieldset>\n                </div>\n                <fieldset className=\"form-group\">\n                  <label className=\"small\">Password</label>\n                  <input className=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\"\n                         ref={register()}/>\n                  {errors.password &&\n                  <small className=\"form-text text-danger\">{errors.password.message}</small>}\n                </fieldset>\n\n                <fieldset className=\"form-group\">\n                  <label className=\"small\">Role</label>\n                  <div className=\"text-center\">\n                    <div className=\"form-check form-check-inline\">\n                      <input className=\"form-check-input\" type=\"radio\" name=\"role\" value=\"customer\" id=\"customer\"\n                             defaultChecked={true}\n                             ref={register()}/>\n                      <label className=\"form-check-label\" htmlFor=\"customer\">Customer</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                      <input className=\"form-check-input\" type=\"radio\" name=\"role\" value=\"company\" id=\"company\"\n                             ref={register()}/>\n                      <label className=\"form-check-label\" htmlFor=\"company\">Company</label>\n                    </div>\n                  </div>\n                </fieldset>\n                {role === 'company' &&\n                <div>\n                  <fieldset className=\"form-group\">\n                    <label className=\"small\">Company Name</label>\n                    <input className=\"form-control\" type=\"text\" name=\"company\" placeholder=\"MARKA\" ref={register()}/>\n                    {errors.company &&\n                    <small className=\"form-text text-danger\">{errors.company.message}</small>}\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <label className=\"small\">Free Rate (1/<span>{freeRate || 5}</span>)</label>\n                    <input className=\"form-control\" type=\"range\" min={1} max={10} name=\"freeRate\" defaultValue={5}\n                           step={1} ref={register()}/>\n                  </fieldset>\n                </div>}\n                {/*{status && status.success && <div className=\"alert alert-success\">*/}\n                {/*  <small>{status.success}</small>*/}\n                {/*</div>}*/}\n                <p className=\"text-muted text-center small\">By creating an account, you agree to our <Link\n                  to=\"/tos\">Terms of Service</Link>&nbsp;\n                  and <Link to=\"/privacy\">Privacy Policy</Link>.\n                </p>\n                <button className=\"btn btn-primary w-100\" type=\"submit\" disabled={isSubmitting}>\n                  {isSubmitting && <span><i className=\"fa fa-circle-notch fa-spin\"/>&nbsp;</span>}\n                  Create my account\n                </button>\n                <p className=\"pt-4 text-center small\">You can <Link to=\"/signin\">sign in</Link> if you have an\n                  account\n                  already.</p>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>);\n}))\n","import {inject, observer} from \"mobx-react\";\nimport React, {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport {Field, Form, Formik} from 'formik'\nimport * as Yup from 'yup'\n\nconst FormikForm = ({\n                      values,\n                      touched,\n                      errors,\n                      isSubmitting\n                    }) => (\n  <section className=\"cover bg-light\">\n    <div className=\"container\">\n      <div className=\"row h-100 justify-content-md-center\">\n        <div className=\"col-sm-4 my-auto\">\n          <Form className=\"card border-0 p-4 shadow\">\n            <h1 className=\"h4 lined\"><span>SIGN IN</span></h1>\n            <fieldset className=\"form-group\">\n              <label className=\"small\">email or Email</label>\n              <Field className=\"form-control\" type=\"text\" name=\"email\" placeholder=\"email\"/>\n              {touched.email && errors.email &&\n              <small className=\"form-text text-danger\">{errors.email}</small>}\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label className=\"small\">Password</label>\n              <Field className=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\"/>\n              {touched.password && errors.password &&\n              <small className=\"form-text text-danger\">{errors.password}</small>}\n            </fieldset>\n            <button className=\"btn btn-primary w-100\" type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting && <span><i className=\"fa fa-circle-notch fa-spin\"/>&nbsp;</span>}\n              Login\n            </button>\n            <p className=\"pt-4 text-center small\">You can <Link to=\"/signup\">sign up</Link> easly\n              if you don't have an account yet. Or you have an issue about sign in you can\n              reset your password <Link to=\"/reset\">here</Link></p>\n          </Form>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\n@inject('AccountStore')\n@observer\nclass EnhancedForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null\n    }\n  }\n\n  handleSubmit = (values, {props, setFieldError, setSubmitting, setStatus}) => {\n\n    //\n    // if (values.email.match(/^[A-z0-9._%+-]+@[A-z0-9.-]+\\.[A-z0-9.]{2,}$/))\n    //   values = {email: values.email, password: values.password};\n\n    console.log('on submit', values);\n\n    setStatus(null);\n    try {\n      this.props.AccountStore.signIn(values);\n      setStatus({'success': 'Your account has been updated successfully!'});\n      setSubmitting(false);\n    } catch (errors) {\n      setStatus({'error': errors});\n      setSubmitting(false);\n    }\n\n  };\n\n  render() {\n    const {authenticated} = this.props.AccountStore;\n    if (authenticated) {\n      const location = localStorage.getItem('location');\n      return <Redirect to={location || '/dashboard'}/>\n    } else\n      return (\n        <div className=\"row justify-content-md-center\">\n          <Formik component={FormikForm}\n                  enableReinitialize=\"true\"\n                  initialValues={{\n                    email: this.state.email || '',\n                    password: ''\n                  }}\n                  validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Please write a correct email address').required('Email is required'),\n                  })}\n                  onSubmit={this.handleSubmit}/>\n        </div>)\n  }\n}\n\n//\n// const mapStateToProps = (state) => {\n//   typeof setSubmittingHigher === 'function' && setSubmittingHigher(false);\n//   return {system: state.system, me: state.auth.me}\n// };\n\nexport default EnhancedForm//connect(mapStateToProps, {userSignIn})(EnhancedForm);\n","import {inject, observer} from \"mobx-react\";\nimport React, {PureComponent} from 'react';\n\n@inject('AccountStore')\n@observer\nclass SignOut extends PureComponent {\n  render() {\n    this.props.AccountStore.signOut();\n    return <section className=\"container\">Sorry to see you go ...</section>;\n  }\n}\n\nexport default SignOut//connect(null, {userSignOut})(SignOut);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Field, Form, withFormik} from 'formik'\nimport * as Yup from 'yup'\n\nconst FormikForm = ({\n                        touched,\n                        errors,\n                        isSubmitting\n                    }) => (\n    <section className=\"cover  bg-light\">\n        <div className=\"container\">\n            <div className=\"row h-100 justify-content-md-center\">\n                <div className=\"col-sm-4 my-auto\">\n                    <Form className=\"card border-0 p-4 shadow\">\n                        <h1 className=\"h4 lined\"><span>RESET</span></h1>\n                        <fieldset className=\"form-group\">\n                            <label className=\"small\">Email</label>\n                            <Field className=\"form-control\" type=\"text\" name=\"email\" placeholder=\"email\"/>\n                            {touched.email && errors.email &&\n                            <small className=\"form-text text-danger\">{errors.email}</small>}\n                        </fieldset>\n                        <button className=\"btn btn-primary w-100\" type=\"submit\" disabled={isSubmitting}>\n                            {isSubmitting && <span><i className=\"fa fa-circle-notch fa-spin\"/>&nbsp;</span>}\n                            Send a reset email\n                        </button>\n                        <p className=\"pt-4 text-center small\"><Link to=\"/signin\">return to login page</Link></p>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nconst EnhancedForm = withFormik({\n    mapPropsToValues() {\n        return {\n            email: ''\n        }\n    },\n    validationSchema: Yup.object().shape({\n        email: Yup.string().email('Please write a correct email address').required('Email is required'),\n    }),\n    handleSubmit(values, {props, setSubmitting, resetForm}) {\n        // setSubmittingHigher = () => {\n        //     setSubmitting();\n        //     resetForm();\n        // };\n        //props.resetPasswordRequest(values.email)\n    }\n})(FormikForm);\n\nexport default EnhancedForm\n","import React from 'react';\nimport {Field, Form, withFormik} from 'formik'\nimport * as Yup from 'yup'\n\nconst FormikForm = ({\n                        values,\n                        touched,\n                        errors,\n                        isSubmitting\n                    }) => (\n    <section className=\"cover  bg-light\">\n        <div className=\"container\">\n            <div className=\"row h-100 justify-content-md-center\">\n                <div className=\"col-sm-4 my-auto\">\n                    <Form className=\"card border-0 p-4 shadow\">\n                        <h1 className=\"h4 lined\"><span>NEW PASSWORD</span></h1>\n                        <fieldset className=\"form-group\">\n                            <label className=\"small\">Token</label>\n                            <Field className=\"form-control\" type=\"text\" name=\"token\" placeholder=\"token\"/>\n                            {touched.token && errors.token &&\n                            <small className=\"form-text text-danger\">{errors.token}</small>}\n                        </fieldset>\n                        <fieldset className=\"form-group\">\n                            <label className=\"small\">Password</label>\n                            <Field className=\"form-control\" type=\"password\" name=\"password\" placeholder=\"password\"/>\n                            {touched.password && errors.password &&\n                            <small className=\"form-text text-danger\">{errors.password}</small>}\n                        </fieldset>\n                        <button className=\"btn btn-primary w-100\" type=\"submit\" disabled={isSubmitting}>\n                            {isSubmitting && <span><i className=\"fa fa-circle-notch fa-spin\"/>&nbsp;</span>}\n                            Set my new password\n                        </button>\n                    </Form>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nconst EnhancedForm = withFormik({\n    mapPropsToValues({match}) {\n        return {\n            token: match.params.token,\n            password: ''\n        }\n    },\n    validationSchema: Yup.object().shape({\n        token: Yup.string().required('Token is required'),\n        password: Yup.string().required('Password is required').min(8, 'Password must be 8 characters or longer')\n            .matches(/[a-z]/, 'Password must contain at least one lowercase char')\n            .matches(/[A-Z]/, 'Password must contain at least one uppercase char')\n            .matches(/[a-zA-Z]+[^a-zA-Z\\s]+/, 'at least 1 number or special char (@,!,#, etc).'),\n    }),\n    handleSubmit(values, {props, resetForm, setSubmitting}) {\n        // setSubmittingHigher = (success) => {\n        //     setSubmitting();\n        //     if (success) {\n        //         resetForm();\n        //     }\n        // };\n        //props.resetPassword(values);\n    }\n})(FormikForm);\n\nexport default EnhancedForm\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {HashLink} from 'react-router-hash-link';\n\nclass Welcome extends Component {\n\n  componentDidMount() {\n    document.getElementById('intro').style.height = window.innerHeight + 'px';\n  }\n\n  render() {\n    return <React.Fragment>\n      <header id=\"intro\" className=\"intro\">\n        <div className=\"container\">\n          <div className=\"intro-text\">\n            <h2 className=\"intro-lead-in\">marka.club,</h2>\n            <h1 className=\"intro-heading text-uppercase\">get your customer's<br/><span\n              className=\"highlight\">loyalty</span></h1>\n            <HashLink className=\"btn btn-primary btn-xl text-uppercase\" to=\"#about\">Tell Me More</HashLink>\n          </div>\n        </div>\n      </header>\n      <section id=\"about\" className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-4\">\n          </div>\n          <div className=\"col-md-8\">\n            <h2 className=\"section-heading\">ABOUT</h2>\n            <h3 className=\"section-subheading text-muted mb-4\">This is a default static page and no need\n              authentication.</h3>\n            <p>\n              Hi, I'm Goker.</p>\n            <p>\n              This is an open source full-stack React + Mobx (boilerplate) application with Firebase (Cloud Firestore,\n              Cloud Functions and Storage).\n            </p>\n            <p>\n              I developing this project for rapid application development for my side projects and the <a\n              href=\"https://kodkafa.com/\" target=\"_blank\" rel=\"noopener noreferrer\">kodkafa</a> which is developed with\n              this project, is one of\n              them.\n            </p>\n            <p>\n              Also, you can visit <Link to=\"/features\">Features</Link> to see full features list. If you want to\n              contribute you can reach me freely via <a href=\"https://goker.me\"\n                                                        rel=\"noopener noreferrer\"\n                                                        target=\"_blank\">goker.me</a>\n            </p>\n          </div>\n        </div>\n      </section>\n    </React.Fragment>;\n  }\n}\n\nexport default Welcome;\n","import React, {Component} from 'react';\n\nclass Features extends Component {\n  render() {\n    return <section id=\"features\">\n      <div className=\"container\">\n        <h1 className=\"h3\">Features</h1>\n\n        <table className=\"table table-bordered\">\n          <tr>\n            <th width=\"50%\">Feature</th>\n            <th className=\"text-center\" width=\"25%\">DONE</th>\n            <th className=\"text-center\" width=\"25%\">IN PROGRESS</th>\n          </tr>\n          <tr>\n            <td>\n              User Register/Login\n              <div className=\"small text-muted\">Users can register and login with their email.</div>\n            </td>\n            <td className=\"text-center\"><i className=\"fas fa-check\"/></td>\n            <td className=\"text-center\"/>\n          </tr>\n          <tr>\n            <td>Password Recovery</td>\n            <td className=\"text-center\"/>\n            <td className=\"text-center\"><i className=\"fas fa-check\"/></td>\n          </tr>\n          <tr>\n            <td>\n              User Access Control\n              <div className=\"small text-muted\">Five level access control with Firebase custom claims.</div>\n            </td>\n            <td className=\"text-center\"><i className=\"fas fa-check\"/></td>\n            <td className=\"text-center\"/>\n          </tr>\n          <tr>\n            <td>\n              Unique Username\n              <div className=\"small text-muted\">Users set their unique username.</div>\n            </td>\n            <td className=\"text-center\"><i className=\"fas fa-check\"/></td>\n            <td className=\"text-center\"/>\n          </tr>\n          <tr>\n            <td>\n              User Profile\n              <div className=\"small text-muted\">Users have a simple profile page with avatar and cover images.</div>\n            </td>\n            <td className=\"text-center\"><i className=\"fas fa-check\"/></td>\n            <td className=\"text-center\"/>\n          </tr>\n          <tr>\n            <td>\n              Image Upload (Fire Storage)\n              <div className=\"small text-muted\">Users can upload and edit their avatar and cover images.</div>\n            </td>\n            <td className=\"text-center\"><i className=\"fas fa-check\"/></td>\n            <td className=\"text-center\"/>\n          </tr>\n          <tr>\n            <td>\n              User List\n              <div className=\"small text-muted\">Granted users can see user list and search in.</div>\n            </td>\n            <td className=\"text-center\"><i className=\"fas fa-check\"/></td>\n            <td className=\"text-center\"/>\n          </tr>\n          <tr>\n            <td>User Management (Access Level Control)\n              <div className=\"small text-muted\">Granted users can change any user access level.</div>\n            </td>\n            <td className=\"text-center\"><i className=\"fas fa-check\"/></td>\n            <td className=\"text-center\"/>\n          </tr>\n          <tr>\n            <td>\n              Activity Log\n              <div className=\"small text-muted\">All users activity will be logged.</div>\n            </td>\n            <td className=\"text-center\"/>\n            <td className=\"text-center\"><i className=\"fas fa-check\"/></td>\n          </tr>\n        </table>\n\n        <h2 className=\"h3\">Packages</h2>\n        <p>React 16.4, Firebase 7.6, Mobx 5.15, Bootstrap 4.4 (Reactstrap), React Router 5.1, Formik 2.0</p>\n      </div>\n    </section>;\n  }\n}\n\nexport default Features;\n","import {inject, observer} from \"mobx-react\";\nimport React, {useEffect} from 'react';\n\nexport const Company = inject('AccountStore', 'CodeStore', 'QRStore')(observer(props => {\n\n  useEffect(() => {\n    props.CodeStore.read()\n  }, [props.CodeStore])\n\n  const {state, meta, list} = props.CodeStore\n\n  useEffect(() => {\n    if (list.length)\n      props.QRStore.create(window.location.origin + \"/codes/use/\" + list.filter(i => !i.isUsed)[0].code)\n  }, [props.QRStore, list])\n\n  const {QR} = props.QRStore;\n  const {me} = props.AccountStore;\n  console.log({state, meta, list, QR})\n\n  const renderHello = (user) => {\n    if (user) {\n      return <p>Hello <strong> {user} </strong>, you logged in!</p>\n    }\n  };\n\n  const handleGenerate = async () => {\n    props.CodeStore.read()\n  }\n  const handleClick = async () => {\n    const {me} = props.AccountStore;\n    const owner = {\n      id: me.id,\n      first: me.first,\n      last: me.last\n    }\n    const company = {\n      id: me.id,\n      name: me.company\n    }\n    await props.CodeStore.create({owner, company, quantity: 10});\n    props.CodeStore.read()\n  }\n\n  return <React.Fragment>\n    <section className=\"container\">\n      <div className=\"d-flex pb-3 mb-3\" style={{minHeight: 300}}>\n        <div className=\"flex-grow-1\">\n          <div className=\"d-flex mb-3\" style={{height: 100}}>\n            <div className=\"card flex-fill p-2 mr-3 bg-info text-secondary border-0\">\n              <h4 className=\"border-bottom border-secondary\">SALE</h4>\n              <p className=\"h1 text-right\">{meta.total - meta.available}</p>\n            </div>\n            <div className=\"card flex-fill p-2 mr-3 bg-secondary text-primary border-0\">\n              <h4 className=\"border-bottom border-primary\">FREE</h4>\n              <p className=\"h1 text-right\">{meta.gifted}/{meta.gift}</p>\n            </div>\n            <div className=\"card flex-fill p-2 bg-primary text-white border-0\">\n              <h4 className=\"border-bottom\">AVAILABLE</h4>\n              <p className=\"h1 text-right\">{meta.available}/{meta.total}</p>\n            </div>\n          </div>\n          <div className=\"mb-3 p-2 card h-75 overflow-auto\">\n\n\n            <table className=\"table\">\n              <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Code</th>\n                <th scope=\"col\">Generated At</th>\n                <th scope=\"col\">Used At</th>\n                <th scope=\"col\">Is used?</th>\n              </tr>\n              </thead>\n              <tbody>\n              {list.map((i, k) =>\n                <tr key={i.id} className=\"small\">\n                  <th scope=\"row\">{k + 1}</th>\n                  <td>{i.isUsed\n                    ? <span className=\"d-block p-1\">{i.code}</span>\n                    : <a key={i.id} className=\"link d-block p-1\" href={\"/codes/use/\" + i.code}\n                         target=\"_blank\" rel=\"noopener noreferrer\">{i.code}</a>}</td>\n                  <td>{i.createdAt}</td>\n                  <td>{i.updatedAt === i.createdAt ? '-' : i.updatedAt}</td>\n                  <td>{i.isUsed ? 'TRUE' : 'FALSE'}</td>\n                </tr>\n              )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div className=\"ml-3\" style={{maxWidth: 300}}>\n          <div className=\"mb-3 p-2 card\" style={{minHeight: 100}}>\n            {/*01*/}\n            {props.me && renderHello(props.me.name)}\n            {/*<p>This is a static page and you must be logged in to see the page.</p>*/}\n            <p className=\"small text-center\">Dont't you have promo code?</p>\n            <button className=\"btn btn-secondary\" onClick={handleClick}>Generate 10 more codes</button>\n          </div>\n          <div className=\"mb-3 p-2 card h-50 text-muted small\">\n            <p>Hello <span className=\"text-primary\">{me.first} {me.last}</span>,<br/>\n              You logged as a <span className=\"text-info\">{me.role}</span>.</p>\n            <button className=\"btn btn-secondary\" onClick={handleGenerate}>Generate QR</button>\n            <div dangerouslySetInnerHTML={{__html: QR}}/>\n          </div>\n        </div>\n      </div>\n    </section>\n  </React.Fragment>;\n}));\n","import {inject, observer} from \"mobx-react\";\nimport React, {useEffect, useState} from 'react';\n\nexport const Customer = inject('AccountStore', 'CodeStore', 'QRStore')(observer(props => {\n\n\n  const [code, setCode] = useState(null);\n  useEffect(() => {\n    props.CodeStore.read()\n  }, [props.CodeStore])\n  const {state, meta, list} = props.CodeStore\n  const {me} = props.AccountStore;\n  const {QR} = props.QRStore;\n  console.log({state, meta, list})\n\n  const handleGenerate = async (code) => {\n    setCode(window.location.origin + \"/codes/use/\" + code)\n    props.QRStore.create(window.location.origin + \"/codes/use/\" + code)\n  }\n\n  const handleClose = () => {\n    setCode(null)\n  }\n\n  return <React.Fragment>\n    <section className=\"container\">\n      <div className=\"d-flex pb-3 mb-3\" style={{minHeight: 300}}>\n        <div className=\"flex-grow-1\">\n          <div className=\"d-flex mb-3\" style={{height: 100}}>\n            <div className=\"card flex-fill p-2 mr-3 bg-secondary text-primary border-0\">\n              <h4 className=\"border-bottom border-secondary\">FREEBIES</h4>\n              <p className=\"h1 text-right\">{meta.freebies - meta.used}/{meta.freebies}</p>\n            </div>\n            <div className=\"card flex-fill p-2 bg-primary text-white border-0\">\n              <h4 className=\"border-bottom border-primary\">USED</h4>\n              <p className=\"h1 text-right\">{meta.used}/{meta.freebies}</p>\n            </div>\n          </div>\n          <div className=\"mb-3 p-2 card h-75 overflow-auto\">\n            {QR && code\n              ? <div>\n                <div dangerouslySetInnerHTML={{__html: QR}}/>\n                <p className=\"small\">\n                  You can scan the code or visit the URL below\n                  <a className=\"link d-block p-1\" href={\"/codes/use/\" + code}\n                     target=\"_blank\" rel=\"noopener noreferrer\">{code}</a>\n                </p>\n                <button className=\"btn btn-secondary\" onClick={handleClose}>CLOSE</button>\n              </div>\n              :\n              <table className=\"table\">\n                <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Company</th>\n                  <th scope=\"col\">Code</th>\n                  <th scope=\"col\">Gifted At</th>\n                  <th scope=\"col\">Used At</th>\n                  <th scope=\"col\">Is used?</th>\n                </tr>\n                </thead>\n                <tbody>\n                {list.map((i, k) =>\n                  <tr key={i.id} className=\"small\">\n                    <th scope=\"row\">{k + 1}</th>\n                    <td>{i.company.name}</td>\n                    <td>{i.isUsed\n                      ? <span className=\"d-block p-1\">{i.code}</span>\n                      : <button key={i.id} className=\"link d-block p-1\"\n                                onClick={() => handleGenerate(i.code)}>{i.code}</button>}</td>\n                    <td>{i.createdAt}</td>\n                    <td>{i.updatedAt === i.createdAt ? '-' : i.updatedAt}</td>\n                    <td>{i.isUsed ? 'TRUE' : 'FALSE'}</td>\n                  </tr>\n                )}\n                </tbody>\n              </table>}\n          </div>\n        </div>\n\n        <div className=\"ml-3\" style={{maxWidth: 300}}>\n          <div className=\"mb-3 p-2 card h-50 text-muted small\">\n            <p>Hello <span className=\"text-primary\">{me.first} {me.last}</span>,<br/>\n              You logged as a <span className=\"text-info\">{me.role}</span>.</p>\n          </div>\n        </div>\n      </div>\n    </section>\n  </React.Fragment>;\n}));\n","import {inject, observer} from \"mobx-react\";\nimport React from 'react';\nimport {Company} from './AsCompany'\nimport {Customer} from './AsCustomer'\n\nexport const Dashboard = inject('AccountStore')(observer(props => {\n\n  const {me} = props.AccountStore;\n\n  return me.role === 'company' ? <Company/> : <Customer/>;\n}));\n","import {inject, observer} from \"mobx-react\";\nimport React, {useEffect, useState} from 'react';\nimport {\n  useParams\n} from \"react-router-dom\";\nimport {Loader} from \"../../components\";\n\n\nexport const Codes = inject('AccountStore', 'CodeStore')(observer(props => {\n  const {code} = useParams();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    (async function fetchData() {\n      setIsSubmitting(true)\n      await props.CodeStore.use(code)\n      setIsSubmitting(false)\n    })();\n  }, [props.CodeStore, code])\n  const {type, company, requiredMore, isGotFreebie} = props.CodeStore.info\n  //console.log({state, list})\n  // const company = {name: 'XXX'}\n  // const x = 3\n\n  return <React.Fragment>\n    <section className=\"container text-center\">\n      <h1 className=\"h2\">Code</h1>\n      <div>\n        {isSubmitting\n          ? <Loader/>\n          : <div className=\"d-flex justify-content-center\">\n            {type === 'free'\n              ? <div className=\"d-flex justify-content-center align-items-center rounded-circle bg-light\"\n                     style={{width: 420, height: 420}}>\n                <div className=\"d-flex justify-content-center align-items-center rounded-circle bg-dark\"\n                     style={{width: 400, height: 400}}>\n                  <div className=\"d-flex justify-content-center align-items-center rounded-circle bg-secondary\"\n                       style={{width: 360, height: 360}}>\n                    <div>\n                      <h3 className=\"h2 text-dark mb-4 font-header font-weight-bold\">CODE IS OK!</h3>\n                      <p className=\"h5 mb-4 font-serif font-italic\">You can give a freebie!</p>\n                      <p className=\"small\">USED CODE:<br/><code>{code}</code></p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              : isGotFreebie\n                ? <div className=\"d-flex justify-content-center align-items-center rounded-circle bg-light\"\n                       style={{width: 420, height: 420}}>\n                  <div className=\"d-flex justify-content-center align-items-center rounded-circle bg-primary\"\n                       style={{width: 400, height: 400}}>\n                    <div className=\"d-flex justify-content-center align-items-center rounded-circle bg-secondary\"\n                         style={{width: 360, height: 360}}>\n                      <div>\n                        <h3 className=\"h1 text-fourth mb-5 font-header font-weight-bold\">YEEEEEY!</h3>\n                        <p className=\"h5 mb-5 font-italic font-serif\">You won a new freebie<br/> from\n                          <span className=\"text-primary\"> {company && company.name}</span></p>\n                        <p className=\"small\">USED CODE:<br/><code>{code}</code></p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                : requiredMore\n                  ? <div className=\"d-flex justify-content-center align-items-center rounded-circle bg-light\"\n                         style={{width: 420, height: 420}}>\n                    <div className=\"d-flex justify-content-center align-items-center rounded-circle bg-info\"\n                         style={{width: 400, height: 400}}>\n                      <div className=\"d-flex justify-content-center align-items-center rounded-circle bg-secondary\"\n                           style={{width: 360, height: 360}}>\n                        <div>\n                          <h3 className=\"h2 text-dark mb-4 font-header font-weight-bold\">ALMOST DONE!</h3>\n                          <p className=\"h5 mb-4 font-serif font-italic\">You need <span\n                            className=\"text-primary\">{requiredMore} </span>\n                            more trade <br/> with <span className=\"text-primary\">{company && company.name}</span> <br/>for\n                            a new freebie!</p>\n                          <p className=\"small\">USED CODE:<br/><code>{code}</code></p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  : null\n            }\n          </div>}\n      </div>\n    </section>\n  </React.Fragment>;\n}));\n","import {inject, observer} from 'mobx-react';\nimport {autorun} from 'mobx';\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Avatar, ImageViewer} from '../../components';\n\n@inject('AccountStore', 'UserStore')\n@observer\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    autorun(() => {\n      props.UserStore.getUserByUsername(props.match.params.username);\n    })\n  }\n\n  render() {\n    const user = this.props.UserStore.data;\n    if (user === null) return <section className=\"container\">\n      <div className=\"profile\">Loading...</div>\n    </section>;\n    if (!user) return <section className=\"container\">\n      <div className=\"profile\"><h3>User not found!</h3></div>\n    </section>;\n\n    return <section className=\"container py-5\">\n      <div className=\"profile\">\n        <figure id=\"cover-figure\" className=\"cover\">\n          <ImageViewer className=\"img-fluid\"\n                     width={1200}\n                     height={300}\n                     src={user.cover}\n                     alt={user.name}/>\n          <figure className=\"avatar\">\n            <Avatar className=\"img-thumbnail\"\n                       width={120}\n                       height={120}\n                       src={user.avatar}\n                       alt={user.name}/>\n          </figure>\n          <div className=\"info\">\n            <h1 className=\"h2\">{user.name}</h1>\n            <h2 className=\"h6\">{user.username}</h2>\n          </div>\n        </figure>\n        <div className=\"profile-nav\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\n              </li>\n              {/*<li className=\"nav-item\">*/}\n              {/*  <a className=\"nav-link\" href=\"#\">Features</a>*/}\n              {/*</li>*/}\n              {/*<li className=\"nav-item\">*/}\n              {/*  <a className=\"nav-link\" href=\"#\">Pricing</a>*/}\n              {/*</li>*/}\n              {/*<li className=\"nav-item\">*/}\n              {/*  <a className=\"nav-link disabled\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>*/}\n              {/*</li>*/}\n            </ul>\n          </nav>\n        </div>\n        <p>{user.bio && user.bio}</p>\n      </div>\n    </section>\n\n  }\n}\n\nexport default Profile\n","import {inject, observer} from 'mobx-react';\nimport {autorun} from 'mobx';\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {ImageViewer} from '../../components'\nimport {Button, Modal, ModalBody, ModalFooter} from \"reactstrap\";\nimport AvatarEditor from \"react-avatar-editor\";\n\n@inject('AccountStore', 'UserStore')\n@observer\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    autorun(() => {\n      //this.props.UserStore.getUserByUsername(props.match.params.username || props.AccountStore.me.id);\n    });\n    this.state = {\n      width: 1200,\n      height: 300,\n      selectedFile: '',\n      isUploadingCover: false,\n      isUploadingProfile: false,\n      avatarModal: false,\n      scale: 1.2,\n      cover: null,\n      avatar: null\n    };\n  }\n\n  static handleBrowseFile(e) {\n    e.stopPropagation();\n    document.getElementById(e.currentTarget.dataset.input).click();\n  }\n\n  handleFileChange = (e) => {\n    if (e.target.id === 'avatar') {\n      this.setState({image: e.target.files[0], avatarModal: true});\n    }\n    if (e.target.id === 'cover') {\n      console.log('cover');\n      const width = document.getElementById('cover-figure').offsetWidth;\n      const height = width * .25;\n      this.setState({cover: e.target.files[0], width, height});\n    }\n  };\n\n  toggleAvatarModal = () => {\n    this.setState({'avatarModal': !this.state.avatarModal})\n  };\n\n  setEditorRef = (editor) => this.editor = editor;\n\n  handleScaleChange = (e) => {\n    console.log('handleScaleChange', e.target.value);\n    this.setState({scale: e.target.value})\n    //this.editor.scale = e.val();\n  };\n\n  uploadAvatar = async () => {\n    if (this.editor) {\n\n      // const canvas = this.editor.getImage().toDataURL();\n      // const image = await fetch(canvas)\n      //   .then(res => res.blob());\n\n      const canvas = this.editor.getImageScaledToCanvas().toDataURL();\n      const image = await fetch(canvas)\n        .then(res => res.blob());\n\n      this.props.UserStore.uploadAvatar(image, () => {\n      }, () => {\n      }, () => {\n        this.toggleAvatarModal()\n      });\n      console.log({image});\n    }\n  };\n\n  uploadCover = async () => {\n    if (this.editor) {\n      //const dataURL = this.editor.getImage().toDataURL();\n      const dataURL = this.editor.getImageScaledToCanvas().toDataURL();\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = this.state.width;\n      canvas.height = this.state.height;\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      img.onload = async () => {\n        ctx.drawImage(img, 0, 0);\n        const image = await fetch(canvas.toDataURL())\n          .then(res => res.blob());\n        this.props.UserStore.uploadCover(image, (progress) => {\n          document.getElementById('coverProgress').style.width = progress + '%';\n        }, () => null, () => {\n          this.setState({cover: null});\n          document.getElementById('coverProgress').style.width = 0;\n        });\n      };\n      img.src = dataURL;\n    }\n  };\n\n  cancelCover = () => {\n    this.setState({cover: null})\n  };\n\n  render() {\n    const user = this.props.AccountStore.me;\n    console.log({user});\n    console.log({user});\n    if (user === null) return <section className=\"container\">\n      <div className=\"profile\">Loading...</div>\n    </section>;\n    if (!user) return <section className=\"container\">\n      <div className=\"profile\"><h3>User not found!</h3>\n        <p>{JSON.stringify(process.env)}</p></div>\n    </section>;\n\n    return <section className=\"container py-5\">\n      <div className=\"profile\">\n        <figure id=\"cover-figure\" className=\"cover\">\n          <div id=\"coverProgress\" className=\"progress\"/>\n          <div className=\"buttons\">\n            <Link className=\"btn btn-primary\" to=\"/settings\">Edit Profile</Link>\n            {/*<button className=\"btn btn-primary ml-1\"*/}\n            {/*        data-input=\"cover\"*/}\n            {/*        onClick={!this.state.cover ? Profile.handleBrowseFile : () => null}>Change Cover*/}\n            {/*</button>*/}\n          </div>\n          <ImageViewer className=\"img-fluid\"\n                     width={this.state.width}\n                     height={this.state.height}\n                     src={user.cover}\n                     alt={user.fullname}/>\n          {this.state.cover\n            ? <div className=\"editor\">\n              <AvatarEditor\n                ref={this.setEditorRef}\n                image={this.state.cover}\n                width={this.state.width}\n                height={this.state.height}\n                border={0}\n                scale={1}/>\n              <div className=\"buttons\">\n                <button className=\"btn btn-primary\" onClick={this.uploadCover}>Save</button>\n                <button className=\"btn btn-danger ml-1\" onClick={this.cancelCover}>Cancel</button>\n              </div>\n            </div>\n            : <div className=\"image-input-container\">\n              <input type=\"file\" id=\"cover\" name=\"image\" onChange={this.handleFileChange}/>\n            </div>\n          }\n          <figure className={this.state.isUploadingProfile ? 'avatar uploading' : 'avatar'}>\n            <ImageViewer className=\"img-thumbnail\"\n                       width={120}\n                       height={120}\n                       src={user.avatar}\n                       alt={user.fullname}/>\n            {/*<div className=\"image-input-container\">*/}\n            {/*  <input type=\"file\" id=\"avatar\" name=\"image\" onChange={this.handleFileChange}/>*/}\n            {/*</div>*/}\n            {/*<button className=\"primary\"*/}\n            {/*        data-input=\"avatar\"*/}\n            {/*        onClick={Profile.handleBrowseFile}>Upload*/}\n            {/*</button>*/}\n          </figure>\n          <div className=\"info\">\n            <h1 className=\"h2\">{user.name}</h1>\n            <h2 className=\"h6\">{user.username}</h2>\n          </div>\n        </figure>\n        <div className=\"profile-nav\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\n              </li>\n              {/*<li className=\"nav-item\">*/}\n              {/*  <a className=\"nav-link\" href=\"#\">Features</a>*/}\n              {/*</li>*/}\n              {/*<li className=\"nav-item\">*/}\n              {/*  <a className=\"nav-link\" href=\"#\">Pricing</a>*/}\n              {/*</li>*/}\n              {/*<li className=\"nav-item\">*/}\n              {/*  <a className=\"nav-link disabled\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>*/}\n              {/*</li>*/}\n            </ul>\n          </nav>\n        </div>\n        <p>{user.bio && user.bio}</p>\n      </div>\n      <Modal isOpen={this.state.avatarModal} toggle={this.toggleAvatarModal} className=\"\">\n        <ModalBody>\n          <div className=\"d-flex justify-content-center\">\n            <AvatarEditor\n              ref={this.setEditorRef}\n              image={this.state.image}\n              width={250}\n              height={250}\n              border={50}\n              scale={this.state.scale}\n            />\n          </div>\n          <input className=\"form-control\" type=\"range\" onChange={this.handleScaleChange} min=\"1\" max=\"1.5\" step=\".05\"\n                 value={this.state.scale}/>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.uploadAvatar}>Upload</Button>{' '}\n          <Button color=\"secondary\" onClick={this.toggleAvatarModal}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </section>\n\n  }\n}\n\nexport default Profile;\n","import {inject, observer} from \"mobx-react\";\nimport React, {Component} from 'react';\nimport {Field, Form, Formik} from 'formik'\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as Yup from 'yup'\n\nconst FormikForm = ({\n                      values,\n                      touched,\n                      errors,\n                      setFieldValue,\n                      isSubmitting\n                    }) => (\n  <Form className=\"col-md-6\">\n    <div className=\"row\">\n      <fieldset className=\"col-md-6 form-group\">\n        <label>Name</label>\n        <Field className=\"form-control\" type=\"text\" name=\"first\" placeholder=\"Name\"/>\n        {touched.first && errors.first && <small className=\"form-text text-danger\">{errors.first}</small>}\n      </fieldset>\n      <fieldset className=\"col-md-6 form-group\">\n        <label>Surname</label>\n        <Field className=\"form-control\" type=\"text\" name=\"last\" placeholder=\"Surname\"/>\n        {touched.last && errors.last &&\n        <small className=\"form-text text-danger\">{errors.last}</small>}\n      </fieldset>\n    </div>\n    <fieldset className=\"form-group\">\n      <label>Birthday</label>\n      {console.log('born', values.born)}\n      <DatePicker\n        selected={new Date(values.born||null)}\n        dateFormat=\"d MMMM yyyy\"\n        className=\"form-control\"\n        name=\"born\"\n        onChange={date => setFieldValue('born', date)}\n      />\n      {touched.born && errors.born && <small className=\"form-text text-danger\">{errors.born}</small>}\n    </fieldset>\n    <fieldset className=\"form-group\">\n      <Field className=\"form-control\" component=\"textarea\" name=\"bio\"\n             placeholder=\"Write something short about you\"/>\n      {touched.bio && errors.bio && <small className=\"form-text text-danger\">{errors.bio}</small>}\n    </fieldset>\n    <button className=\"btn btn-primary\" type=\"submit\" disabled={isSubmitting}>\n      {isSubmitting && <span><i className=\"fa fa-circle-notch fa-spin\"/>&nbsp;</span>}\n      Update my Account\n    </button>\n  </Form>\n);\n\n@inject('AccountStore', 'UserStore')\n@observer\nclass EnhancedForm extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   const {first, last, born, bio} = props.AccountStore.me;\n  //   this.state = {first, last, born, bio};\n  //   console.log('state', this.state, props.AccountStore.me)\n  // }\n\n  handleSubmit = (values, {props, setFieldError, setSubmitting, setStatus}) => {\n    setStatus(null);\n    console.log({values});\n    //await props.AccountStore.userSignUp(values);\n    try {\n      this.props.AccountStore.update(values);\n      //setStatus({'success': 'Your account has been created successfully!'})\n      setSubmitting(false);\n      //resetForm();\n    } catch (errors) {\n      //setStatus({'error': errors})\n      //setSubmitting(false);\n    }\n  };\n\n  render() {\n    const me = this.props.AccountStore.me;\n    console.log({me})\n    return (\n      <div className=\"row justify-content-md-center\">\n        <Formik component={FormikForm}\n                enableReinitialize=\"true\"\n                initialValues={me}\n                validationSchema={Yup.object().shape({\n                  // email: Yup.string().email('Please write a correct email address').required('Email is required'),\n                  // password: Yup.string().min(8, 'Password must be 8 characters or longer')\n                  //   .matches(/[a-z]/, 'Password must contain at least one lowercase char')\n                  //   .matches(/[A-Z]/, 'Password must contain at least one uppercase char')\n                  //   .matches(/[a-zA-Z]+[^a-zA-Z\\s]+/, 'at least 1 number or special char (@,!,#, etc).'),\n                  // username: Yup.string().matches(/^[A-Za-z0-9]+(?:[._-][A-Za-z0-9]+)*$/, 'Username only contain english characters and (_,-,.). Also usernames must start and end with a letter or number.')\n                  //   .required('Username is required'),\n                  first: Yup.string().required('Name is required'),\n                  last: Yup.string().required('Surname is required'),\n                })}\n                onSubmit={this.handleSubmit}/>\n      </div>)\n  }\n}\n\nexport default EnhancedForm\n","import React, {PureComponent} from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport Account from './Account';\n// import ChangePassword from './ChangePassword';\n// import Username from './Username';\n\nconst routes = [\n  {\n    path: '/settings(/account)?',\n    link: '/settings/account',\n    icon: 'fa fa-user',\n    exact: true,\n    title: () => <h1 className=\"h5\">Account Info</h1>,\n    name: 'Account Info',\n    main: Account\n  },\n  // {\n  //   path: '/settings/set-username',\n  //   link: '/settings/set-username',\n  //   icon: 'fa fa-key',\n  //   exact: true,\n  //   title: () => <h1 className=\"h5\">Set Username</h1>,\n  //   name: 'Set Username',\n  //   main: Username\n  // },\n  // {\n  //   path: '/settings/change-password',\n  //   link: '/settings/change-password',\n  //   icon: 'fa fa-key',\n  //   exact: true,\n  //   title: () => <h1 className=\"h5\">Change Password</h1>,\n  //   name: 'Change Password',\n  //   main: ChangePassword\n  // },\n  // {\n  //   path: '/settings/change-email',\n  //   link: '/settings/change-email',\n  //   icon: 'fa fa-key',\n  //   exact: true,\n  //   title: () => <h1 className=\"h5\">Change Email</h1>,\n  //   name: 'Change Email',\n  //   main: ChangePassword\n  // },\n];\n\nclass Settings extends PureComponent {\n\n  render() {\n    return <section className=\"container\">\n      <div className=\"row\">\n        <nav className=\"col-md-2 d-none d-md-block border-right sidebar\">\n          <div className=\"sidebar-sticky\">\n            <h5 className=\"sidebar-heading text-muted\"><i className=\"fa fa-cogs\"/> Settings</h5>\n            <ul className=\"nav flex-column small\">\n              {routes.map((route, index) => (\n                <li key={index} className=\"nav-item\">\n                  <Link className=\"nav-link active\" to={route.link}>\n                    <i className={route.icon}/> {route.name}\n                  </Link>\n                </li>))}\n            </ul>\n          </div>\n        </nav>\n        <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n          <div\n            className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n            {routes.map((route, index) => (\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                component={route.title}\n              />\n            ))}\n          </div>\n          {routes.map((route, index) => (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={route.main}\n            />\n          ))}\n        </main>\n      </div>\n    </section>;\n  }\n}\n\nexport default Settings;\n","import {inject, observer} from 'mobx-react';\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Input} from \"reactstrap\";\nimport {Avatar} from '../../components';\n\n@inject('AccountStore', 'UserStore')\n@observer\nclass List extends Component {\n\n  constructor(props) {\n    super(props);\n    const params = new URLSearchParams(props.location.search);\n    const search = params.get('search') || '';\n    const page = params.get('page') || 1;\n    this.state = {\n      me: props.me,\n      count: 0,\n      page,\n      limit: 10,\n      range: 10,\n      items: [],\n      query: search,\n      search: search,\n      filteredItems: false,\n      system: false\n    }\n  }\n\n  componentDidMount() {\n    // console.log('componentDidMount', this.state);\n    // const {getUsers} = this.props.UserStore;\n    // if (this.state.query) {\n    //   const filter = {skip: Math.max(0, this.state.page - 1) * this.state.limit, limit: this.state.limit};\n    //   getUsers({query: this.state.query, filter});\n    // } else {\n    //   getUsers();\n    // }\n  }\n\n  componentDidUpdate(props) {\n    // const params = new URLSearchParams(props.location.search);\n    // const search = params.get('search') || '';\n    // const page = params.get('page') || 1;\n    // console.log('componentDidUpdate', props);\n    //\n    // if (page !== this.state.page) {\n    //   console.log('page', props);\n    //   const filter = {skip: Math.max(0, page - 1) * this.state.limit, limit: this.state.limit};\n    //   this.setState({page: page});\n    //   this.props.fetchList({query: this.state.query, filter});\n    // } else if (search !== this.state.search) {\n    //   console.log('search', props);\n    //   this.setState({search});\n    //   this.props.fetchList({query: search});\n    // }\n    //\n    // if (props.data && props.data.items) {\n    //   this.setState({\n    //     isLoading: false,\n    //     count: props.data.count,\n    //     items: props.data.items,\n    //     filteredItems: false\n    //   });\n    // }\n  }\n\n  handleFilter = (e) => {\n    e.preventDefault();\n    console.log(e.currentTarget.value);\n    const query = e.currentTarget.value.toLowerCase();\n    const filteredItems = this.state.items.filter(item => {\n      console.log({item});\n      return (item.name.toLowerCase().indexOf(query) > -1 || item.surname.toLowerCase().indexOf(query) > -1\n        || item.username.toLowerCase().indexOf(query) > -1 || item.email.toLowerCase().indexOf(query) > -1)\n    });\n    this.setState({query, filteredItems});\n  };\n\n  handleSearch = (e) => {\n    e.preventDefault();\n    console.log(e.key);\n    if (e.key === 'Enter')\n      return History.push('?search=' + this.state.query);\n  };\n\n  renderItems = () => {\n    const {isAdmin, isEditor} = this.props.AccountStore.me;\n    const {list} = this.props.UserStore;\n    console.log('data', list, typeof list);\n    //if (!(status === 'ready')) return false;\n    if (!list) return false;\n    //const items = this.props.filteredItems || this.props.system.data.users;\n    return [...list.values()].map(item => {\n      return <div className=\"col-sm-4\" key={item.uid}>\n        <div className=\"card mb-2\">\n          <div className=\"card-body p-2\">\n            <Avatar className=\"img-thumbnail rounded-circle float-left mr-2\"\n                    src={item.avatar} alt={item.name}\n                    width=\"100\" height=\"100\"/>\n            <div className=\"\">\n              <h3 className=\"h5 card-title\">\n                <i className={item.icon}/>&nbsp;&nbsp;{item.name}{item.email}</h3>\n              <p>\n                <small>{item.first}</small>\n              </p>\n              <div className=\"text-right\">\n                {item.uid &&\n                <Link to={'/' + (item.username || item.uid)} className=\"btn btn-sm btn-primary\">PROFILE</Link>}\n                {(isAdmin || isEditor) &&\n                <Link to={'/users/' + item.uid + '/edit'} className=\"btn btn-sm btn-success ml-1\">EDIT</Link>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>;\n    })\n  };\n\n  render() {\n\n    //const {data} = this.props.UserStore;\n\n    // if (!this.props.system) {\n    //   return <div>Loading...</div>;\n    // }\n    // if (this.props.system.error) {\n    //   return <div>{this.props.system.error}</div>;\n    // }\n    return (<React.Fragment>\n        <div className=\"list\">\n          <div className=\"searchInput text-right pr-4\">\n            <Input type=\"text\" className=\"form-control-sm\" placeholder=\"Filter or Search...\" value={this.state.query}\n                   onKeyUp={this.handleSearch} onChange={this.handleFilter}/>\n            {/*<small className=\"text-muted\">Total result: {this.props.count}</small>*/}\n          </div>\n          <div className=\"row\">\n            {this.renderItems()}\n          </div>\n          {/*{this.props.count &&*/}\n          {/*<Pagination page={this.state.page} count={this.props.count}*/}\n          {/*            limit={this.state.limit} range={this.state.range}*/}\n          {/*            query={{search: this.props.search}}/>}*/}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default List\n","import {inject, observer} from \"mobx-react\";\nimport React, {Component} from 'react';\nimport {Field, Form, Formik} from 'formik'\nimport * as Yup from 'yup';\nimport {ToggleButton} from '../../components';\n\nconst FormikForm = ({\n                      values,\n                      touched,\n                      errors,\n                      status,\n                      isSubmitting\n                    }) => (\n  <Form>\n    <fieldset className=\"form-group\">\n      <Field className=\"form-control\" type=\"text\" name=\"username\" placeholder=\"Username\"/>\n      {touched.username && errors.username && <small className=\"form-text text-danger\">{errors.username}</small>}\n    </fieldset>\n    <fieldset className=\"form-group\">\n      <Field className=\"form-control\" type=\"text\" name=\"email\" placeholder=\"email@email.com\"/>\n      {touched.email && errors.email && <small className=\"form-text text-danger\">{errors.email}</small>}\n    </fieldset>\n    <div className=\"row\">\n      <fieldset className=\"col-md-6 form-group\">\n        <label>Name</label>\n        <Field className=\"form-control\" type=\"text\" name=\"name\" placeholder=\"Name\"/>\n        {touched.name && errors.name && <small className=\"form-text text-danger\">{errors.name}</small>}\n      </fieldset>\n      <fieldset className=\"col-md-6 form-group\">\n        <label>Surname</label>\n        <Field className=\"form-control\" type=\"text\" name=\"surname\" placeholder=\"Surname\"/>\n        {touched.surname && errors.surname && <small className=\"form-text text-danger\">{errors.surname}</small>}\n      </fieldset>\n    </div>\n    <fieldset className=\"form-group\">\n      <Field className=\"form-control\" component=\"textarea\" name=\"bio\"\n             placeholder=\"Write something short about you\"/>\n      {touched.bio && errors.bio && <small className=\"form-text text-danger\">{errors.bio}</small>}\n    </fieldset>\n    {status && status.error && <div className=\"alert alert-danger\">\n      <small>{status.error}</small>\n    </div>}\n    {status && status.success && <div className=\"alert alert-success\">\n      <small>{status.success}</small>\n    </div>}\n    <input type=\"hidden\" name=\"id\" value={values.id}/>\n    <button className=\"btn btn-primary\" type=\"submit\" disabled={isSubmitting}>\n      {isSubmitting && <span><i className=\"fa fa-circle-notch fa-spin\"/>&nbsp;</span>}\n      Update the Account\n    </button>\n  </Form>);\n\n@inject('AccountStore', 'UserStore')\n@observer\nclass EnhancedForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: props.user || {},\n      // user: {\n      //     id: '',\n      //     username: '',\n      //     email: '',\n      //     name: '',\n      //     surname: '',\n      //     bio: '',\n      //     roles: []\n      // },\n      error: null\n    }\n  }\n\n  getUserData(id) {\n    if (!this.state.user || id !== this.state.user.id)\n      this.props.UserStore.getUserById(id)\n        .then(user => {\n          this.setState({user: user})\n        })\n        .catch(error => {\n          this.setState({'error': error})\n        })\n  }\n\n  componentDidMount() {\n    this.props.UserStore.getUserById(this.props.match.params.id);\n    // if (!this.props.me || (!this.props.me.isAdmin && !this.props.me.isEditor))\n    //     return History.goBack();\n    // this.getUserData(this.props.match.params.id)\n  }\n\n  // componentDidUpdate = (props) => {\n  //   if (props.user && this.props.user !== props.user)\n  //     this.setState({\n  //       user: props.user,\n  //       loading: false\n  //     });\n  // };\n\n  async handleSubmit(values, {props, setFieldError, setSubmitting, setStatus}) {\n    setStatus(null);\n    try {\n      await this.props.UserStore.updateUser(values);\n      setStatus({'success': 'Your account has been updated successfully!'});\n      setSubmitting(false);\n    } catch (errors) {\n      setStatus({'error': errors});\n      setSubmitting(false);\n    }\n  }\n\n  toggleAdmin(id) {\n    this.setState({\n      error: null,\n    });\n    this.props.UserStore.toggleAdmin(id)\n  }\n\n  toggleEditor(id) {\n    this.setState({\n      error: null,\n    });\n    this.props.UserStore.toggleEditor(id)\n  }\n\n  toggleManager(id) {\n    this.setState({\n      error: null,\n    });\n    this.props.UserStore.toggleManager(id)\n  }\n\n  toggleWorker(id) {\n    this.setState({\n      error: null,\n    });\n    this.props.UserStore.toggleWorker(id)\n  }\n\n  toggleStatus(id) {\n    this.setState({\n      error: null,\n    });\n    this.props.UserStore.toggleStatus(id)\n  }\n\n\n  render() {\n    const user = this.props.UserStore.data;\n    console.log({user})\n    return (\n      <div className=\"row justify-content-md-center\">\n        {!user\n          ? <div>LOADING</div>\n          : <div className=\"col-md-6\">\n            <Formik component={FormikForm}\n                    enableReinitialize=\"true\"\n                    initialValues={{\n                      id: user.id || '',\n                      username: user.username || '',\n                      email: user.email || '',\n                      name: user.name || '',\n                      surname: user.surname || '',\n                      bio: user.bio || '',\n                    }}\n                    validationSchema={Yup.object().shape({\n                      username: Yup.string().required('Username is required'),\n                      email: Yup.string().email('Please write a correct email address').required('Email is required'),\n                      name: Yup.string().required('Name is required'),\n                      surname: Yup.string().required('Surname is required'),\n                      bio: Yup.string().max(200, 'Short bio must be under 200 characters or shorter')\n                    })}\n                    onSubmit={this.handleSubmit}/>\n            <hr/>\n            <div>\n              {this.state.error && <div className=\"alert alert-danger\" role=\"alert\">{this.state.error}</div>}\n              <table className=\"table\">\n                <tbody>\n                  <tr>\n                    <th>Admin</th>\n                    <th>Editor</th>\n                    <th>Manager</th>\n                    <th>Worker</th>\n                    <th>Status</th>\n                  </tr>\n                  <tr>\n                    <td>\n                      <ToggleButton status={user.isAdmin}\n                                    toggleFunction={() => this.toggleAdmin(user.id)}/>\n                    </td>\n                    <td>\n                      <ToggleButton status={user.isEditor}\n                                    toggleFunction={() => this.toggleEditor(user.id)}/>\n                    </td>\n                    <td>\n                      <ToggleButton status={user.isManager}\n                                    toggleFunction={() => this.toggleManager(user.id)}/>\n                    </td>\n                    <td>\n                      <ToggleButton status={user.isWorker}\n                                    toggleFunction={() => this.toggleWorker(user.id)}/>\n                    </td>\n                    <td>\n                      <ToggleButton status={user.status}\n                                    toggleFunction={() => this.toggleStatus(user.id)}/>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        }\n      </div>)\n  }\n}\n\nexport default EnhancedForm\n","import React from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport List from \"./List\";\nimport Edit from \"./Edit\";\n\nconst routes = [\n    {\n        path: '/users(/list)?',\n        link: '/users/list',\n        icon: 'fa fa-users',\n        exact: true,\n        title: () => 'User List',\n        name: 'List',\n        main: List\n    },\n    {\n        path: '/users/edit/:id?',\n        link: null,\n        icon: 'fa fa-image',\n        exact: true,\n        title: () => 'Edit User',\n        name: 'Edit',\n        main: Edit\n    },\n];\n\nclass Users extends React.PureComponent {\n\n    render() {\n        return <section className=\"container\">\n            <div className=\"row\">\n                <nav className=\"col-md-2 d-none d-md-block border-right sidebar\">\n                    <div className=\"sidebar-sticky\">\n                        <h5 className=\"sidebar-heading text-muted\"><i className=\"fa fa-users\"/> User Management</h5>\n                        <ul className=\"nav flex-column small\">\n                            {routes.map((route, index) => (\n                                route.link && <li key={index} className=\"nav-item\">\n                                    <Link className=\"nav-link active\" to={route.link}>\n                                        <i className={route.icon}/> {route.name}\n                                    </Link>\n                                </li>))}\n                        </ul>\n                    </div>\n                </nav>\n                <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n                    <h1 className=\"main-heading text-primary lined lined-align-left lined-primary\">\n                        {routes.map((route, index) => (\n                            <Route\n                                key={index}\n                                path={route.path}\n                                exact={route.exact}\n                                component={route.title}\n                            />\n                        ))}\n                    </h1>\n                    {routes.map((route, index) => (\n                        <Route\n                            key={index}\n                            path={route.path}\n                            exact={route.exact}\n                            component={route.main}\n                        />\n                    ))}\n                </main>\n            </div>\n        </section>;\n    }\n}\n\nexport default Users;","import React, {Component} from 'react';\n\nclass NoMatch extends Component {\n    render() {\n        return <React.Fragment>\n            <section className=\"container d-flex flex-row flex-grow-1 align-items-center justify-content-center\">\n                <h1>404 Not Found</h1>\n            </section>\n        </React.Fragment>;\n    }\n}\n\nexport default NoMatch;\n","import React, {Component} from 'react';\n\nclass TermsOfService extends Component {\n    render() {\n        return <section id=\"termsOfService\">\n            <div className=\"container\">\n                <h1 className=\"h3\">Terms of Service</h1>\n                <hr className=\"border-primary\"/>\n                <p>This is a static page.</p>\n            </div>\n        </section>;\n    }\n}\n\nexport default TermsOfService;\n","import React, {Component} from 'react';\n\nclass PrivacyPolicy extends Component {\n    render() {\n        return <section id=\"privacyPolicy\">\n            <div className=\"container\">\n                <h1 className=\"h3\">Privacy Policy</h1>\n                <hr className=\"border-primary\"/>\n                <p>This is a static page.</p>\n            </div>\n        </section>;\n    }\n}\n\nexport default PrivacyPolicy;\n","import React, {Component} from 'react';\nimport {inject, observer} from 'mobx-react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {Loader} from './components';\nimport {LayoutDefault, LayoutGuest, LayoutWelcome} from './layouts';\nimport {SignUp} from './pages/Auth/SignUp';\nimport SignIn from './pages/Auth/SignIn';\nimport SignOut from './pages/Auth/SignOut';\nimport Reset from './pages/Auth/Reset';\nimport NewPassword from './pages/Auth/NewPassword';\nimport Welcome from './pages/Welcome';\nimport Features from './pages/Features';\nimport {Dashboard} from './pages/Dashboard/Dashboard';\n\nimport {Codes} from './pages/Codes/Codes';\n\nimport Profile from './pages/Profile';\nimport Me from './pages/Profile/Me';\nimport Settings from './pages/Settings';\nimport Users from './pages/Users';\nimport UserEdit from './pages/Users/Edit';\nimport NoMatch from './pages/NoMatch';\nimport TermsOfService from \"./pages/StaticPages/TermsOfService\";\nimport PrivacyPolicy from \"./pages/StaticPages/PrivacyPolicy\";\n\nconst RestrictedRoute = ({component: Component, layout: Layout = LayoutDefault, authenticated, ...rest}) =>\n  <Route\n    {...rest}\n    render={props => authenticated\n      ? <Layout><Component {...props} /></Layout>\n      : <Redirect\n        to={{\n          pathname: '/signin',\n          state: {from: props.location}\n        }}\n      />\n    }\n  />;\n\nconst GuestRoute = ({component: Component, layout: Layout = LayoutGuest, ...rest}) =>\n  <Route\n    {...rest}\n    render={props => <Layout><Component {...props} /></Layout>}\n  />;\n\n@inject('UIStore', 'AccountStore')\n@observer\nclass Routes extends Component {\n\n  componentDidMount() {\n    const {authenticated, handleAuth} = this.props.AccountStore;\n    window.addEventListener('resize', () => {\n      this.props.UIStore.setWidth(Math.max(document.body.scrollWidth, window.innerWidth));\n      this.props.UIStore.setHeight(Math.max(document.body.scrollHeight, window.innerHeight));\n    });\n    console.log(document.body.scrollHeight, Math.max(document.body.scrollHeight, window.innerHeight), window.innerHeight);\n    if (authenticated === false) {\n      handleAuth();\n    } else {\n      const location = this.props.location.pathname + this.props.location.search + this.props.location.hash;\n      localStorage.setItem('location', location || '/dashboard');\n    }\n  }\n\n  render() {\n    const {authenticated} = this.props.AccountStore;\n    if (!['/signin', '/signup', '/reset'].includes(this.props.location.pathname)) {\n      localStorage.setItem('location', this.props.location.pathname + this.props.location.search + this.props.location.hash);\n    }\n    return (\n      (authenticated === null) ? <Loader backgroud={true} height={this.props.UIStore.height}/>\n        : <Switch>\n          <GuestRoute exact path=\"/\" component={Welcome} layout={LayoutWelcome}/>\n          <GuestRoute exact path=\"/features\" component={Features}/>\n          <GuestRoute exact path=\"/tos\" component={TermsOfService}/>\n          <GuestRoute exact path=\"/privacy\" component={PrivacyPolicy}/>\n          <GuestRoute exact path=\"/signin\" component={SignIn}/>\n          <GuestRoute exact path=\"/signout\" component={SignOut}/>\n          <GuestRoute exact path=\"/signup\" component={SignUp}/>\n          <GuestRoute exact path=\"/reset\" component={Reset}/>\n          <GuestRoute exact path=\"/newpassword/:token\" component={NewPassword}/>\n\n          <RestrictedRoute exact path=\"/dashboard\" component={Dashboard} authenticated={authenticated}/>\n          <RestrictedRoute exact path=\"/profile\" component={Me} authenticated={authenticated}/>\n          <RestrictedRoute exact path=\"/settings/:page?\" component={Settings} authenticated={authenticated}/>\n          <RestrictedRoute exact path=\"/users/:id/edit\" component={UserEdit} authenticated={authenticated}/>\n          <RestrictedRoute exact path=\"/users/:page?/:id?\" component={Users} authenticated={authenticated}/>\n\n          <RestrictedRoute exact path=\"/codes/:page?/:code?\" component={Codes} authenticated={authenticated}/>\n\n          <GuestRoute exact path=\"/:username\" component={Profile} layout={LayoutDefault}/>\n          <GuestRoute component={NoMatch}/>\n        </Switch>\n    )\n  }\n}\n\nexport default Routes;\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Routes from './routes.js';\nimport {ScrollToTop} from \"./components\";\n\nconst App = () =>\n  <Router>\n    <ScrollToTop/>\n    <Switch>\n      <Route path=\"/\" component={Routes}/>\n    </Switch>\n  </Router>;\n\nexport default App;\n","import {action, computed, observable} from 'mobx';\n\nexport default class {\n  @observable version = false;\n  @observable height = window.innerHeight;\n  @observable width = window.innerWidth;\n  @action setHeight = height => (this.height = height);\n  @action setWidth = width => (this.width = width);\n\n  constructor(Stores) {\n    this.stores = Stores;\n    //console.log('store: UIStore');\n  }\n\n  @observable loader = false;\n  @observable alertMessage = '';\n  @observable showMessage = false;\n  @observable locale = {\n    languageId: 'english',\n    code: 'en',\n    name: 'English',\n    icon: 'us',\n  };\n  //@observable width = window.innerWidth;\n  @observable initURL = '/';\n  @observable navCollapsed = false;\n  @observable intlProviderRef = null;\n\n  @action\n  setIntlProviderRef = r => {\n    this.intlProviderRef = r;\n  };\n\n  showAuthLoader() {\n    this.loader = true;\n  }\n\n  hideAuthLoader() {\n    this.loader = false;\n  }\n\n  hideMessage() {\n    this.showMessage = false;\n  }\n\n  @action\n  updateWindowWidth(width) {\n    this.width = width;\n  }\n\n  @action\n  toggleCollapsedSideNav() {\n    this.navCollapsed = !this.navCollapsed;\n  }\n\n  @action\n  onNavStyleChange = navStyle => {\n    this.navStyle = navStyle;\n  };\n\n  @computed\n  get fullMap() {\n    return this.width < 800;\n  }\n}\n","import {observable} from 'mobx';\n\nexport class SystemMessage {\n\n    @observable isDisplayed = false;\n\n    constructor(data) {\n\n        this.status = data.status;\n        this.code = data.code;\n        this.message = data.message;\n        this.isDisplayed = false;\n        this.createdAt = data.createdAt;\n\n    }\n\n    hide = () => this.isDisplayed = true;\n\n    hideTimeout = (timeout = 10000) => {\n        setTimeout(() => this.hide(), timeout)\n    };\n\n}\n","export class Account {\n\n  constructor(data) {\n    if (!data) return;\n    this.id = data.id;\n    this.email = data.email;\n    this.first = data.first;\n    this.last = data.last;\n    this.born = data.born;\n    this.bio = data.bio;\n    this.company = data.company;\n    this.freeRate = data.freeRate;\n    this.role = data.role;\n    this.updatedAt = data.updatedAt;\n    this.createdAt = data.createdAt;\n  }\n\n  // @computed\n  // get id() {\n  //   return this._id\n  // }\n\n  get name() {\n    return this.first + ' ' + this.last\n  }\n\n  get isAdmin() {\n    return 'admin' === this.role\n  };\n\n  get isEditor() {\n    return 'editor' === this.role\n  };\n\n  get isManager() {\n    return 'manager' === this.role\n  };\n\n  get isWorker() {\n    return 'worker' === this.role\n  };\n\n  get isCompany() {\n    return 'company' === this.role\n  };\n\n  get isCustomer() {\n    return 'customer' === this.role\n  };\n\n}\n","export class Meta {\n  constructor(data) {\n    this.total = data.total || 0;\n    this.available = data.available || 0;\n    this.gift = data.gift || 0;\n    this.gifted = data.gifted || 0;\n    this.freebies = data.freebies || 0;\n    this.used = data.used || 0;\n  }\n}\n\nexport class Code {\n\n  constructor(data) {\n    if (!data) return;\n    this._id = data._id;\n    this.owner = data.owner;\n    this.company = data.company;\n    this.code = data.code;\n    this.isUsed = data.isUsed;\n    this.updatedAt = data.updatedAt;\n    this.createdAt = data.createdAt;\n  }\n\n  get id() {\n    return this._id;\n  }\n}\n","import {action, computed, observable, toJS} from 'mobx';\nimport {SystemMessage} from '../models';\nimport React from 'react';\n\nexport default class {\n  @observable newRelease = false;\n  @observable _list = new observable.array();\n\n  constructor(Stores) {\n    this.stores = Stores;\n    this.model = SystemMessage;\n  }\n\n  get list() {\n    return toJS(this._list)\n  }\n\n  get news() {\n    return this.list.filter(i => i.isDisplayed === false)\n  }\n\n  @computed\n  set list(item) {\n    return this._list.set(item);\n  }\n\n  @action\n  remove(id) {\n    this._list.delete(id);\n  }\n\n  @action\n  add(doc) {\n    const item = new this.model(doc);\n    const legacy = this._list.filter(i => i.createdAt === doc.createdAt);\n    console.log('system messages add', legacy.length, legacy, doc);\n    if (legacy.length) {\n      if (JSON.stringify(item) !== JSON.stringify(legacy[0]))\n        this._list.push(item);\n    } else\n      this._list.push(item);\n  }\n\n  handleError({code, message}) {\n    console.log({message});\n    this.add({status: 400, code: code || 'ERROR', message: this.linkify(message), createdAt: new Date()})\n  }\n\n  @action\n  setNewRelease(v, message) {\n    this.newRelease = v;\n    this.add({\n      status: 100,\n      code: 'NEW_VERSION',\n      message,\n      createdAt: new Date(),\n      timeless: true\n    })\n  }\n\n  shortener = (text, max = 30) => {\n    return text.length > max ? text.substr(0, 20) + \"...\" : text;\n  };\n\n  linkify = (text) => {\n    //URLs starting with http://, https://, or ftp://\n    const patternURL = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/gim;\n    //text = text.replace(patternURL, (link) => '<a href=\"' + link + '\" target=\"_blank\">' + this.shortener(link) + '</a>');\n    text = text.replace(patternURL, (link) => <a href={link} target=\"_blank\"\n                                                 rel=\"noopener noreferrer\">{this.shortener(link)}</a>);\n\n    //URLs starting with www. (without // before it, or it'd re-link the ones done above)\n    const patternWWW = /(^|[^/])(www\\.[\\S]+(\\b|$))/gim;\n    //text = text.replace(patternWWW, '$1<a href=\"http://$2\" target=\"_blank\">$2</a>');\n    text = text.replace(patternWWW, <React.Fragment>{'$1'}<a href={\"http://$2\"} target=\"_blank\"\n                                                             rel=\"noopener noreferrer\">{'$2'}</a></React.Fragment>);\n\n    //Change email addresses to mailto:: links\n    const patternMAIL = /(\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,6})/gim;\n    text = text.replace(patternMAIL, <a href={\"mailto:$1\"} rel=\"noopener noreferrer\">{'$1'}</a>);\n\n    return text\n  };\n}\n","import cookie from \"react-cookies\";\n\nconst url = window.location.origin.replace(window.location.port, '')\nconst API_URL = url + (url.substr(-1) === ':' ? '4000/api' : ':4000/api')\nconsole.log({API_URL})\nexport class request {\n\n  static get token() {\n    const token = cookie.load('token');\n    return token;// || this.refreshToken().then()\n  }\n\n  static get access_token() {\n    return cookie.load('access_token');\n  }\n\n  static deleteCookies = () => {\n    cookie.remove('token');\n    cookie.remove('remember');\n  };\n\n  static setCookies = ({token, remember}) => {\n    const expires = new Date();\n    if (remember) {\n      expires.setTime(Date.now() + 1000 * 60 * 60 * 24 * 14); //2 weeks\n    } else {\n      expires.setTime(Date.now() + 1000 * 60 * 10); //10 mins\n    }\n    if (token)\n      cookie.save('token', token, {\n        path: '/',\n        expires\n      });\n    if (remember)\n      cookie.save('remember', remember, {\n        path: '/',\n        expires\n      });\n  };\n\n  static get = async (endpoint, params = {}, secured = true) => {\n    const token = secured ? await this.token : null;\n    params = params ? Object.keys(params)\n      .map(k => encodeURI(k) + '=' + encodeURI(params[k]))\n      .join('&') : '';\n    const url = API_URL + endpoint + (params ? '?' + params : '');\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + token},\n      mode: 'cors',\n    });\n    const result = await response.json();\n    if (response.status < 300)\n      return result || true;\n\n    throw new Error(result.message);\n  };\n\n  static post = async (endpoint, data, secured = true) => {\n    const token = secured ? await this.token : null;\n    const url = API_URL + endpoint;\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: token\n        ? {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        } : {'Content-Type': 'application/json'},\n      mode: 'cors',\n      body: JSON.stringify(data)\n    });\n    const result = await response.json();\n    if (response.status <= 201)\n      return result || true;\n\n    throw new Error(result.message);\n\n  };\n\n\n  static put = async (endpoint, data, secured = true) => {\n    const token = secured ? await this.token : null;\n    const url = API_URL + endpoint;\n    const response = await fetch(url, {\n      method: \"PUT\",\n      headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + token},\n      mode: 'cors',\n      body: JSON.stringify(data)\n    });\n    const result = await response.json();\n    if (response.status <= 201)\n      return result || true;\n\n    throw new Error(result.message);\n  };\n\n  static delete = async (endpoint, data, secured = true) => {\n    const token = secured ? await this.token : null;\n    const url = API_URL + endpoint;\n    const response = await fetch(url, {\n      method: \"DELETE\",\n      headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + token},\n      mode: 'cors',\n      body: JSON.stringify(data)\n    });\n    const result = await response.json();\n    //console.log({result});\n    if (response.status === 200)\n      return result || true;\n\n    throw new Error(result['error_message']);\n  }\n}\n","import {request} from '../helpers';\n\nexport class AccountServices {\n\n  static create = async (data) => {\n    return await request.post('/auth/register', data, false);\n  };\n\n  static read = async (params) => {\n    return await request.get('/auth', params);\n  };\n\n  static update = async (data) => {\n    return await request.put('/users/update', data);\n  };\n\n  static delete = async (url_id, id) => {\n    try {\n      return await request.delete('/users/' + id, {url_id}).then();\n    } catch (e) {\n      throw e\n    }\n  };\n\n\n  static signIn = async (data) => {\n    try {\n      const res = await request.post('/auth/login', data, false).then();\n      const {remember} = data;\n      request.setCookies({\n        token: res.token,\n        remember\n      });\n      return true;\n    } catch (e) {\n      throw e\n    }\n  };\n\n  static signOut = () => request.deleteCookies();\n\n  static reset = async (data) => {\n    return await request.post('/auth/forgot-password', data, false).then();\n  };\n\n  static newPassword = async (data) => {\n    return await request.post('/auth/confirm-forgot-password', data, false);\n  };\n\n  static changePassword = async (data) => {\n    return await request.post('/auth/change-password', data);\n  };\n\n  static activation = async (data) => {\n    return await request.post('/account/activation', data, false);\n  };\n\n  static verify = async (data) => {\n    return await request.post('/verify-email', data, false);\n  };\n\n  static newsletter = async (data) => {\n    return await request.post('/newsletter', data, false);\n  };\n\n  static me = async () => {\n    return await request.get('/users/me', null, true);\n  };\n\n  // static create = async (data) => {\n  //     return await request.post('/users', data);\n  // };\n\n  //\n  // static detail = async (id) => {\n  //   if (id)\n  //     return await request.get('/users/' + id);\n  // };\n\n}\n","import {request} from '../helpers';\n\nexport class UserServices {\n\n  static create = async (data) => {\n    return await request.post('/auth/register', data, false);\n  };\n\n  static read = async (params) => {\n    return await request.get('/auth', params);\n  };\n\n  static update = async (id, data) => {\n    return await request.put('/users/' + id, data).then();\n  };\n\n  static delete = async (url_id, id) => {\n    return await request.delete('/users/' + id, {url_id}).then();\n  };\n\n\n  static detail = async (id) => {\n    if (id)\n      return await request.get('/users/' + id);\n  };\n\n}\n","import {request} from '../helpers';\n\nexport class Services {\n\n  static create = async (data) => {\n    return await request.post('/codes/generate', data);\n  }\n\n  static read = async (params) => {\n    return await request.get('/codes', params);\n  };\n\n  static use = async (code) => {\n    //const data = await request.get('/codes/' + code, {});\n   // const {company} = data;\n   return  await request.post('/transactions', {code});\n    //return await request.put('/codes/use/' + code, {});\n  };\n\n  static delete = async () => null;\n\n}\n","import {request} from '../helpers';\n\nexport class Services {\n\n  static create = async (data) => {\n    return await request.put('/qr', {data}, false);\n  }\n\n  static read = async () => null;\n\n  static update = async () => null;\n\n  static delete = async () => null;\n\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\nimport {Provider} from \"mobx-react\";\nimport {stores} from \"./stores\";\n\nconst render = Component => {\n  ReactDOM.render(\n    <Provider {...stores}><Component/></Provider>,\n    document.getElementById('root')\n  );\n};\n\nserviceWorker.register({\n  onUpdate: registration => {\n    registration.unregister().then(() => {\n      caches.keys().then(function (cacheNames) {\n        Promise.all(\n          cacheNames.map(function (cacheName) {\n            return caches.delete(cacheName);\n          }))\n          .then(() => {\n            console.log('new version is released!');\n            const message = <span>New version is released. Please\n      <button className=\"btn-link\" onClick={() => window.location.reload()}>refresh</button> the\n      page</span>;\n            stores.SystemMessageStore.setNewRelease(true, message);\n          })\n      })\n    });\n  },\n});\nrender(App);\n","import {computed, observable, action} from 'mobx';\nimport {AccountServices} from '../services';\nimport {Account} from '../models';\nimport {request} from \"../helpers\";\n\nexport default class AccountStore {\n\n\n  @observable authenticated = false;\n  @observable _me = null;\n\n  @observable _id = null;\n  @observable _list = null;\n  @observable _detail = null;\n  @observable _profile = null;\n\n  @observable data = null;\n  @observable status = \"initial\";\n  @observable searchQuery = \"\";\n\n  constructor(Stores) {\n    this.stores = Stores;\n    this.model = Account;\n    this.service = AccountServices;\n  }\n\n  create = async (data) => {\n    if (!data) return false;\n    return await this.service.create(data)\n      .then(res => {\n        return res;\n      })\n      .catch(error => this.stores.SystemMessageStore.handleError(error));\n  };\n\n  @action\n  read(id = null) {\n    this.state = \"fetching\";\n    if (id)\n      this.service.detail(id).then((res) => this._profile = new this.model(res.data), this.handleError);\n    else\n      this.service.get().then(this.fetchSuccess, this.handleError)\n  }\n\n  @action\n  update = async (data) => {\n    if (!data) return false;\n    return await this.service.update(data)\n      .then(async res => {\n        this._me = new this.model(await this.service.me().then(res => res.data) || {});\n        localStorage.setItem('me', JSON.stringify(this._me));\n        return res;\n      })\n      .catch(error => this.stores.SystemMessageStore.handleError(error));\n  };\n\n  @action\n  delete = async (url_id, id) => {\n    if (!id) return false;\n    return await this.service.delete(url_id, id)\n      .then()\n      .catch(error => this.stores.SystemMessageStore.handleError(error));\n  };\n\n  @action.bound\n  fetchSuccess(res) {\n    if (res.data.length)\n      res.data.forEach(i => this._list.set(i.url_id, new this.model(i || {})));\n    this.state = \"done\"\n  }\n\n  @action.bound\n  handleError(error) {\n    this.state = \"error\";\n    return this.stores.SystemMessageStore.handleError(error)\n  }\n\n  handleAuth = async () => {\n    const token = await request.token;\n    this.authenticated = !!token;\n  };\n\n\n  @action\n  signIn = async ({email, password, remember}) => {\n    try {\n\n\n      if (!email || !password) return false;\n\n      const res = await this.service.signIn({email, password, remember}).then()\n\n      console.log({res});\n      if (!res) return false;\n\n      this._me = new this.model(await this.service.me().then(res => res.data) || {});\n      localStorage.setItem('me', JSON.stringify(this._me));\n      this.authenticated = true;\n      return true;\n    } catch (e) {\n      this.stores.SystemMessageStore.handleError(e)\n    }\n  };\n\n  @action\n  signOut = async () => {\n    this.authenticated = false;\n    localStorage.clear();\n    this.service.signOut();\n  };\n\n\n  @action\n  getProfile = async () => {\n    this.service.me().then((res) => {\n      this._profile = new this.model(res.data);\n      localStorage.setItem('me', JSON.stringify(this._profile));\n    }, this.handleError);\n  };\n\n\n  @computed\n  get me() {\n    return this._me || new this.model(JSON.parse(localStorage.getItem('me') || null));\n  }\n\n  @computed\n  get profile() {\n    if (!this._profile) {\n      const me = JSON.parse(localStorage.getItem('me') || null);\n      if (me && me.client_name) return this._profile = new this.model(me);\n      return (async () => {\n        const data = await this.service.me()\n          .then(res => res.data)\n          .catch(error => this.stores.SystemMessageStore.handleError(error));\n        this._profile = new this.model(data || {});\n        localStorage.setItem('me', JSON.stringify(this._profile));\n        return this._profile;\n      })();\n    }\n    return this._profile;\n  }\n\n  updateProfile = async (data) => {\n    if (!data) return false;\n    return await this.service.updateProfile(data)\n      .then(res => {\n        localStorage.removeItem('me');\n        this._profile = null;\n        return this.profile;\n      })\n      .catch(error => this.stores.SystemMessageStore.handleError(error));\n  };\n\n}\n","import {action, computed, observable, toJS} from \"mobx\";\n\nexport class User {\n\n  client_id = 100352;\n  @observable client_name = \"Scout Bags\";\n  @observable client_type_cd = \"STANDARD\";\n  @observable client_url = null;\n  @observable address = \"str1\";\n  @observable city = \"str\";\n  @observable state = \"str\";\n  @observable zip_code = \"str\";\n  @observable country = \"str\";\n  urls = null;\n  url = false\n  @observable utcOffset = 0;\n  @observable status_cd;\n  @observable timezone_id;\n\n  constructor(data) {\n\n    this.client_id = data.client_id;\n    this.client_name = data.client_name;\n    this.client_type_cd = data.client_type_cd;\n    this.client_url = data.client_url;\n    this.address = data.address;\n    this.city = data.city;\n    this.state = data.state;\n    this.zip_code = data.zip_code;\n    this.country = data.country;\n    this.urls = data.urls;\n    this.status_cd = data.status_cd;\n    this.timezone_id = data.timezone_id;\n\n    this.url = data.url ? data.url : data.urls ? data.urls[0] : {};\n    this.timezone = this.url ? this.url.timezone_text || 'UTC+03:00' : 'UTC+03:00';\n    const regex = /UTC[-+][0-9][0-9]:[0-9][0-9]/i;\n    this.utcOffset = this.timezone.match(regex) ? this.timezone.match(regex)[0].replace('UTC', '') : '+0';\n  }\n\n  @computed\n  get id() {\n    return this.client_id\n  }\n\n  @computed\n  get name() {\n    return this.client_name\n  }\n\n  @action\n  changeUrl = (id) => {\n    const urls = toJS(this.urls.filter(i => i.url_id === Number(id)));\n    if (urls[0]) {\n      this.url = toJS(urls[0]);\n      this.timezone = urls[0].timezone_text || 'UTC+03:00';\n      const regex = /UTC[-+][0-9][0-9]:[0-9][0-9]/i;\n      this.utcOffset = this.timezone.match(regex)[0].replace('UTC', '');\n      localStorage.setItem('me', JSON.stringify(this));\n      console.log('change URL ME', this)\n    }\n  };\n\n  @action\n  setURL = (url) => {\n    this.url = url;\n    this.timezone = url.timezone_text || 'UTC+03:00';\n    const regex = /UTC[-+][0-9][0-9]:[0-9][0-9]/i;\n    this.utcOffset = this.timezone.match(regex)[0].replace('UTC', '');\n    localStorage.setItem('me', JSON.stringify(this));\n  };\n\n  isAdmin = () => {\n    return 'admin' in this.customClaims && this.customClaims.admin\n  };\n\n  isEditor = () => {\n    return 'editor' in this.customClaims && this.customClaims.editor\n  };\n\n  isManager = () => {\n    return 'manager' in this.customClaims && this.customClaims.manager\n  };\n\n  isWorker = () => {\n    return 'worker' in this.customClaims && this.customClaims.worker\n  };\n\n  // get id() {\n  //   return this.uid\n  // }\n  //\n  // get name() {\n  //   return this.first + ' ' + this.last\n  // }\n\n  @computed\n  get born() {\n    return this._born;// instanceof firebase.firestore.Timestamp ? this._born.toDate() : this._born\n  }\n\n  set born(date) {\n    this._born = date;\n  }\n\n  save = async () => {\n    try {\n      // const {uid, first, last, born, bio, avatar, cover} = this;\n      // await firebase.firestore()\n      //   .collection('users')\n      //   .doc(uid)\n      //   .update({first, last, born, bio, avatar, cover})\n      //   .then()\n      //   .catch(error => stores.SystemMessageStore.handleError(error));\n      // //await this.service.put(uid, {first, last, born, bio});\n      // if (uid === stores.AuthStore.me.uid)\n      //   await stores.AuthStore.getUserData({uid});\n    } catch (error) {\n      // stores.SystemMessageStore.handleError(error)\n    }\n  };\n\n}\n","import {computed, observable, action, toJS} from 'mobx';\nimport {UserServices} from '../services';\nimport {User} from '../models/User';\nimport moment from 'moment';\n\nexport default class UserStore {\n  @observable _id = null;\n  @observable _list = null;\n  @observable _detail = null;\n  @observable _profile = null;\n\n  @observable data = null;\n  @observable status = \"initial\";\n  @observable searchQuery = \"\";\n\n  constructor(Stores) {\n    this.stores = Stores;\n    this.model = User;\n    this.service = UserServices;\n  }\n\n  @action\n  read(id = null) {\n    this.state = \"fetching\";\n    if (id)\n      this.service.detail(id).then((res) => this._profile = new this.model(res.data), this.handleError);\n    else\n      this.service.get().then(this.fetchSuccess, this.handleError)\n  }\n\n  @action\n  getProfile = async () => {\n    this.service.getProfile().then((res) => {\n      this._profile = new this.model(res.data);\n      localStorage.setItem('me', JSON.stringify(this._profile));\n    }, this.handleError);\n  };\n\n  @computed\n  get profile() {\n    if (!this._profile) {\n      const me = JSON.parse(localStorage.getItem('me') || null);\n      if (me && me.client_name) return this._profile = new this.model(me);\n      return (async () => {\n        const data = await this.service.getProfile()\n          .then(res => res.data)\n          .catch(error => this.stores.SystemMessageStore.handleError(error));\n        this._profile = new this.model(data || {});\n        localStorage.setItem('me', JSON.stringify(this._profile));\n        return this._profile;\n      })();\n    }\n    return this._profile;\n  }\n\n  updateProfile = async (data) => {\n    if (!data) return false;\n    return await this.service.updateProfile(data)\n      .then(res => {\n        localStorage.removeItem('me');\n        this._profile = null;\n        return this.profile;\n      })\n      .catch(error => this.stores.SystemMessageStore.handleError(error));\n  };\n\n  create = async (data) => {\n    if (!data) return false;\n    return await this.service.create(data)\n      .then(res => {\n        return res;\n      })\n      .catch(error => this.stores.SystemMessageStore.handleError(error));\n  };\n\n  update = async (id, data) => {\n    if (!data) return false;\n    return await this.service.update(id, data)\n      .then(res => {\n        //this._profile = null;\n        return res;\n      })\n      .catch(error => this.stores.SystemMessageStore.handleError(error));\n  };\n\n  delete = async (url_id, id) => {\n    if (!id) return false;\n    return await this.service.delete(url_id, id)\n      .then()\n      .catch(error => this.stores.SystemMessageStore.handleError(error));\n  };\n\n  get = (params = {}) => {\n    if (!this._list || !this._list.length || params.force === true) {\n      this.service.get(params)\n        .then(res => {\n          this._list = res.data && res.data.users.length ? res.data.users : [{}];\n          //.map(i => new this.model(i || {}))\n        })\n        .catch(error => this.stores.SystemMessageStore.handleError(error));\n    }\n    return toJS(this._list)\n  };\n\n  @action\n  detail = (id) => {\n    if (id !== undefined && this._list) {\n      const users = this._list.filter(i => String(i.user_id) === String(id));\n      this._detail = users[0];\n      // if (id && (!this._detail || (this._detail && this._id !== id))) {\n      //     this._id = id;\n      //     return (async () => {\n      //         const data = await this.service.detail(id)\n      //             .then(res => res ? res.data : {})\n      //             .catch(error => this.stores.SystemMessageStore.handleError(error));\n      //         const newItem = {id, ...data};\n      //         return this._detail = toJS(newItem);\n      //     })();\n      // }\n    }\n    return this._detail\n  };\n\n  @computed\n  get moment() {\n    return this._profile ? moment(this._profile.moment) : moment();\n  }\n\n  @computed\n  get today() {\n    const m = this._profile ? moment(this._profile.moment) : moment();\n    return m.add(0)\n  }\n\n  @computed\n  get yesterday() {\n    const m = this._profile ? moment(this._profile.moment) : moment();\n    return m.add(-1, 'days')\n  }\n\n  date = (time) => {\n    return this._profile ? moment(time).utcOffset(this._profile.utcOffset) : moment(time);\n  };\n\n  @action.bound\n  fetchSuccess(res) {\n    if (res.data.length)\n      res.data.forEach(i => this._list.set(i.url_id, new this.model(i || {})));\n    this.state = \"done\"\n  }\n\n  @action.bound\n  handleError(error) {\n    this.state = \"error\";\n    return this.stores.SystemMessageStore.handleError(error)\n  }\n}\n","import {observable, action, computed} from 'mobx';\nimport {CodeServices as Service} from '../services';\nimport {CodeMeta as Meta, Code as Model} from '../models';\n\nexport class Store {\n\n  @observable state = \"initial\";\n  @observable meta = {};\n\n  @observable _id = null;\n  @observable _list = new observable.map();\n  @observable _item = {}\n\n  @observable info = {};\n\n  @observable searchQuery = \"\";\n\n  constructor(Stores) {\n    this.stores = Stores;\n  }\n\n  create = async (data) => {\n    if (!data) return false;\n    return await Service.create(data)\n      .then()\n      .catch(error => this.stores.SystemMessageStore.handleError(error));\n  };\n\n  @action\n  read(id = null) {\n    this.state = \"fetching\";\n    if (id)\n      Service.detail(id).then((res) => this._profile = new Model(res.data), this.handleError);\n    else\n      Service.read().then(this.fetchSuccess, this.handleError)\n  }\n\n  @action\n  use = async (data) => {\n    if (!data) return false;\n    return await Service.use(data)\n      .then(res=>{\n        this.info = res.data\n      })\n      .catch(error => this.stores.SystemMessageStore.handleError(error));\n  };\n\n  @action\n  delete = async () => null;\n\n  @action.bound\n  fetchSuccess(res) {\n    if (res.meta) {\n      this.meta = new Meta(res.meta);\n    }\n    if (res.data.length) {\n      this._list = new observable.map();\n      res.data.forEach(i => {\n        const item = new Model(i || {});\n        this._list.set(item.id, item);\n      });\n    }\n    this.state = \"done\"\n  }\n\n  @action.bound\n  handleError(error) {\n    this.state = \"error\";\n    return this.stores.SystemMessageStore.handleError(error)\n  }\n\n  @computed\n  get list() {\n    return [...this._list.values()].sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n  }\n\n  get item() {\n    return this._item;\n  }\n\n}\n","import {observable, action} from 'mobx';\nimport {QRServices as Service} from '../services';\n\nexport class Store {\n\n  @observable state = \"initial\";\n  @observable QR = null;\n\n  constructor(Stores) {\n    this.stores = Stores;\n  }\n\n  @action\n  create = async (data) => {\n    if (!data) return false;\n    this.state = \"initial\";\n    const res = await Service.create(data)\n      .then(res => res)\n      .catch(error => this.stores.SystemMessageStore.handleError(error));\n    this.state = \"done\";\n    this.QR = res.data;\n  };\n\n}\n","import UIStore from './UIStore';\nimport SystemMessageStore from './SystemMessageStore';\n// import NotificationStore from './NotificationStore';\n// import AuthStore from './AuthStore';\nimport AccountStore from './AccountStore';\nimport UserStore from './UserStore';\nimport {Store as CodeStore} from './CodeStore';\nimport {Store as QRStore} from './QRStore';\n\nclass RootStore {\n  constructor() {\n    this.UIStore = new UIStore(this);\n    this.SystemMessageStore = new SystemMessageStore(this);\n    // this.NotificationStore = new NotificationStore(this);\n    // this.AuthStore = new AuthStore(this);\n    this.AccountStore = new AccountStore(this);\n    this.UserStore = new UserStore(this);\n    this.CodeStore = new CodeStore(this);\n    this.QRStore = new QRStore(this);\n  }\n}\n\nexport const stores = new RootStore();\n"],"sourceRoot":""}